/*
 * Elastic Cloud API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.BasicFailedReply;
import io.swagger.client.model.EmptyResponse;
import io.swagger.client.model.FilterAssociation;
import io.swagger.client.model.IpFilterRuleset;
import io.swagger.client.model.IpFilterRulesets;
import io.swagger.client.model.IpFilteringSettings;
import io.swagger.client.model.RuleSetResponse;
import io.swagger.client.model.RulesetAssociations;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DeploymentsIpFilteringApi
 */
@Ignore
public class DeploymentsIpFilteringApiTest {

    private final DeploymentsIpFilteringApi api = new DeploymentsIpFilteringApi();

    /**
     * Create a ruleset
     *
     * Creates a ruleset that combines a set of rules.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createIpFilterRulesetTest() throws ApiException {
        IpFilterRuleset body = null;
        RuleSetResponse response = api.createIpFilterRuleset(body);

        // TODO: test validations
    }
    /**
     * Create ruleset association
     *
     * Applies the ruleset to the specified deployment.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createIpFilterRulesetAssociationTest() throws ApiException {
        FilterAssociation body = null;
        String rulesetId = null;
        EmptyResponse response = api.createIpFilterRulesetAssociation(body, rulesetId);

        // TODO: test validations
    }
    /**
     * Delete a ruleset
     *
     * Deletes the ruleset by ID.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteIpFilterRulesetTest() throws ApiException {
        String rulesetId = null;
        Boolean ignoreAssociations = null;
        EmptyResponse response = api.deleteIpFilterRuleset(rulesetId, ignoreAssociations);

        // TODO: test validations
    }
    /**
     * Delete ruleset association
     *
     * Deletes the traffic rules in the ruleset from the deployment.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteIpFilterRulesetAssociationTest() throws ApiException {
        String rulesetId = null;
        String associationType = null;
        String associatedEntityId = null;
        EmptyResponse response = api.deleteIpFilterRulesetAssociation(rulesetId, associationType, associatedEntityId);

        // TODO: test validations
    }
    /**
     * Get associated rulesets
     *
     * Retrieves the rulesets associated with a deployment.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getIpFilterDeploymentRulesetAssociationsTest() throws ApiException {
        String associationType = null;
        String associatedEntityId = null;
        IpFilteringSettings response = api.getIpFilterDeploymentRulesetAssociations(associationType, associatedEntityId);

        // TODO: test validations
    }
    /**
     * Get a ruleset
     *
     * Retrieves the ruleset by ID.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getIpFilterRulesetTest() throws ApiException {
        String rulesetId = null;
        Boolean includeAssociations = null;
        IpFilterRuleset response = api.getIpFilterRuleset(rulesetId, includeAssociations);

        // TODO: test validations
    }
    /**
     * Get associated deployments
     *
     * Retrieves a list of deployments that are associated to the specified ruleset.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getIpFilterRulesetDeploymentAssociationsTest() throws ApiException {
        String rulesetId = null;
        RulesetAssociations response = api.getIpFilterRulesetDeploymentAssociations(rulesetId);

        // TODO: test validations
    }
    /**
     * Get all rulesets
     *
     * Retrieves all of the user rulesets.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getIpFilterRulesetsTest() throws ApiException {
        Boolean includeAssociations = null;
        IpFilterRulesets response = api.getIpFilterRulesets(includeAssociations);

        // TODO: test validations
    }
    /**
     * Updates a ruleset
     *
     * Updates the ruleset with the definition.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateIpFilterRulesetTest() throws ApiException {
        IpFilterRuleset body = null;
        String rulesetId = null;
        RuleSetResponse response = api.updateIpFilterRuleset(body, rulesetId);

        // TODO: test validations
    }
}
