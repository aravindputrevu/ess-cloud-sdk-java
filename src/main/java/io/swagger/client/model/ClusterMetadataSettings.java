/*
 * Elastic Cloud API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.ClusterMetadataResourcesSettings;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * The top-level configuration settings for the Elasticsearch cluster.
 */
@Schema(description = "The top-level configuration settings for the Elasticsearch cluster.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-03-10T16:33:30.970+05:30[Asia/Kolkata]")
public class ClusterMetadataSettings {
  @SerializedName("name")
  private String name = null;

  @SerializedName("owner_id")
  private String ownerId = null;

  @SerializedName("subscription_level")
  private String subscriptionLevel = null;

  @SerializedName("system_owned")
  private Boolean systemOwned = null;

  @SerializedName("contact_email")
  private String contactEmail = null;

  @SerializedName("hidden")
  private Boolean hidden = null;

  @SerializedName("resources")
  private ClusterMetadataResourcesSettings resources = null;

  public ClusterMetadataSettings name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The display name of the cluster
   * @return name
  **/
  @Schema(description = "The display name of the cluster")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ClusterMetadataSettings ownerId(String ownerId) {
    this.ownerId = ownerId;
    return this;
  }

   /**
   * The user id (referencing whatever user database is in use) of the cluster owner
   * @return ownerId
  **/
  @Schema(description = "The user id (referencing whatever user database is in use) of the cluster owner")
  public String getOwnerId() {
    return ownerId;
  }

  public void setOwnerId(String ownerId) {
    this.ownerId = ownerId;
  }

  public ClusterMetadataSettings subscriptionLevel(String subscriptionLevel) {
    this.subscriptionLevel = subscriptionLevel;
    return this;
  }

   /**
   * Subscription level of the cluster
   * @return subscriptionLevel
  **/
  @Schema(description = "Subscription level of the cluster")
  public String getSubscriptionLevel() {
    return subscriptionLevel;
  }

  public void setSubscriptionLevel(String subscriptionLevel) {
    this.subscriptionLevel = subscriptionLevel;
  }

  public ClusterMetadataSettings systemOwned(Boolean systemOwned) {
    this.systemOwned = systemOwned;
    return this;
  }

   /**
   * Indicates if a cluster is system owned (restricts the set of operations that can be performed on it)
   * @return systemOwned
  **/
  @Schema(description = "Indicates if a cluster is system owned (restricts the set of operations that can be performed on it)")
  public Boolean isSystemOwned() {
    return systemOwned;
  }

  public void setSystemOwned(Boolean systemOwned) {
    this.systemOwned = systemOwned;
  }

  public ClusterMetadataSettings contactEmail(String contactEmail) {
    this.contactEmail = contactEmail;
    return this;
  }

   /**
   * Contact email for the cluster
   * @return contactEmail
  **/
  @Schema(description = "Contact email for the cluster")
  public String getContactEmail() {
    return contactEmail;
  }

  public void setContactEmail(String contactEmail) {
    this.contactEmail = contactEmail;
  }

   /**
   * Whether or not this cluster is hidden from the normal clusters list
   * @return hidden
  **/
  @Schema(description = "Whether or not this cluster is hidden from the normal clusters list")
  public Boolean isHidden() {
    return hidden;
  }

  public ClusterMetadataSettings resources(ClusterMetadataResourcesSettings resources) {
    this.resources = resources;
    return this;
  }

   /**
   * Get resources
   * @return resources
  **/
  @Schema(description = "")
  public ClusterMetadataResourcesSettings getResources() {
    return resources;
  }

  public void setResources(ClusterMetadataResourcesSettings resources) {
    this.resources = resources;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ClusterMetadataSettings clusterMetadataSettings = (ClusterMetadataSettings) o;
    return Objects.equals(this.name, clusterMetadataSettings.name) &&
        Objects.equals(this.ownerId, clusterMetadataSettings.ownerId) &&
        Objects.equals(this.subscriptionLevel, clusterMetadataSettings.subscriptionLevel) &&
        Objects.equals(this.systemOwned, clusterMetadataSettings.systemOwned) &&
        Objects.equals(this.contactEmail, clusterMetadataSettings.contactEmail) &&
        Objects.equals(this.hidden, clusterMetadataSettings.hidden) &&
        Objects.equals(this.resources, clusterMetadataSettings.resources);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, ownerId, subscriptionLevel, systemOwned, contactEmail, hidden, resources);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ClusterMetadataSettings {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    ownerId: ").append(toIndentedString(ownerId)).append("\n");
    sb.append("    subscriptionLevel: ").append(toIndentedString(subscriptionLevel)).append("\n");
    sb.append("    systemOwned: ").append(toIndentedString(systemOwned)).append("\n");
    sb.append("    contactEmail: ").append(toIndentedString(contactEmail)).append("\n");
    sb.append("    hidden: ").append(toIndentedString(hidden)).append("\n");
    sb.append("    resources: ").append(toIndentedString(resources)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
