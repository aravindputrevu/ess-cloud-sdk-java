/*
 * Elastic Cloud API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Information about the node type.
 */
@Schema(description = "Information about the node type.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-03-10T16:33:30.970+05:30[Asia/Kolkata]")
public class NodeTypeResource {
  @SerializedName("node_type")
  private String nodeType = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("default_instance_configuration_id")
  private String defaultInstanceConfigurationId = null;

  @SerializedName("mandatory")
  private Boolean mandatory = null;

  public NodeTypeResource nodeType(String nodeType) {
    this.nodeType = nodeType;
    return this;
  }

   /**
   * Node type, part of the key for this resource
   * @return nodeType
  **/
  @Schema(required = true, description = "Node type, part of the key for this resource")
  public String getNodeType() {
    return nodeType;
  }

  public void setNodeType(String nodeType) {
    this.nodeType = nodeType;
  }

  public NodeTypeResource name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Node type name
   * @return name
  **/
  @Schema(required = true, description = "Node type name")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public NodeTypeResource description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Node type description
   * @return description
  **/
  @Schema(required = true, description = "Node type description")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public NodeTypeResource defaultInstanceConfigurationId(String defaultInstanceConfigurationId) {
    this.defaultInstanceConfigurationId = defaultInstanceConfigurationId;
    return this;
  }

   /**
   * Id of the default instance configuration to use for this node type.
   * @return defaultInstanceConfigurationId
  **/
  @Schema(description = "Id of the default instance configuration to use for this node type.")
  public String getDefaultInstanceConfigurationId() {
    return defaultInstanceConfigurationId;
  }

  public void setDefaultInstanceConfigurationId(String defaultInstanceConfigurationId) {
    this.defaultInstanceConfigurationId = defaultInstanceConfigurationId;
  }

  public NodeTypeResource mandatory(Boolean mandatory) {
    this.mandatory = mandatory;
    return this;
  }

   /**
   * Flag to specify a node type is mandatory in the corresponding cluster&#x27;s plan
   * @return mandatory
  **/
  @Schema(description = "Flag to specify a node type is mandatory in the corresponding cluster's plan")
  public Boolean isMandatory() {
    return mandatory;
  }

  public void setMandatory(Boolean mandatory) {
    this.mandatory = mandatory;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NodeTypeResource nodeTypeResource = (NodeTypeResource) o;
    return Objects.equals(this.nodeType, nodeTypeResource.nodeType) &&
        Objects.equals(this.name, nodeTypeResource.name) &&
        Objects.equals(this.description, nodeTypeResource.description) &&
        Objects.equals(this.defaultInstanceConfigurationId, nodeTypeResource.defaultInstanceConfigurationId) &&
        Objects.equals(this.mandatory, nodeTypeResource.mandatory);
  }

  @Override
  public int hashCode() {
    return Objects.hash(nodeType, name, description, defaultInstanceConfigurationId, mandatory);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NodeTypeResource {\n");
    
    sb.append("    nodeType: ").append(toIndentedString(nodeType)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    defaultInstanceConfigurationId: ").append(toIndentedString(defaultInstanceConfigurationId)).append("\n");
    sb.append("    mandatory: ").append(toIndentedString(mandatory)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
