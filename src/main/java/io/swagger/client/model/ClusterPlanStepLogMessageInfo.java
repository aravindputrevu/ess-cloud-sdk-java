/*
 * Elastic Cloud API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;
/**
 * The log message from a specified stage of an executed step in a plan.
 */
@Schema(description = "The log message from a specified stage of an executed step in a plan.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-03-10T16:33:30.970+05:30[Asia/Kolkata]")
public class ClusterPlanStepLogMessageInfo {
  @SerializedName("timestamp")
  private OffsetDateTime timestamp = null;

  @SerializedName("delta_in_millis")
  private Long deltaInMillis = null;

  /**
   * Stage that info log message takes place in
   */
  @JsonAdapter(StageEnum.Adapter.class)
  public enum StageEnum {
    STARTING("starting"),
    COMPLETED("completed"),
    IN_PROGRESS("in_progress");

    private String value;

    StageEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static StageEnum fromValue(String text) {
      for (StageEnum b : StageEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<StageEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StageEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StageEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return StageEnum.fromValue(String.valueOf(value));
      }
    }
  }  @SerializedName("stage")
  private StageEnum stage = null;

  @SerializedName("message")
  private String message = null;

  public ClusterPlanStepLogMessageInfo timestamp(OffsetDateTime timestamp) {
    this.timestamp = timestamp;
    return this;
  }

   /**
   * Timestamp marking on info log of step
   * @return timestamp
  **/
  @Schema(required = true, description = "Timestamp marking on info log of step")
  public OffsetDateTime getTimestamp() {
    return timestamp;
  }

  public void setTimestamp(OffsetDateTime timestamp) {
    this.timestamp = timestamp;
  }

  public ClusterPlanStepLogMessageInfo deltaInMillis(Long deltaInMillis) {
    this.deltaInMillis = deltaInMillis;
    return this;
  }

   /**
   * Time in milliseconds since previous log message
   * @return deltaInMillis
  **/
  @Schema(description = "Time in milliseconds since previous log message")
  public Long getDeltaInMillis() {
    return deltaInMillis;
  }

  public void setDeltaInMillis(Long deltaInMillis) {
    this.deltaInMillis = deltaInMillis;
  }

  public ClusterPlanStepLogMessageInfo stage(StageEnum stage) {
    this.stage = stage;
    return this;
  }

   /**
   * Stage that info log message takes place in
   * @return stage
  **/
  @Schema(required = true, description = "Stage that info log message takes place in")
  public StageEnum getStage() {
    return stage;
  }

  public void setStage(StageEnum stage) {
    this.stage = stage;
  }

  public ClusterPlanStepLogMessageInfo message(String message) {
    this.message = message;
    return this;
  }

   /**
   * Human readable log message
   * @return message
  **/
  @Schema(required = true, description = "Human readable log message")
  public String getMessage() {
    return message;
  }

  public void setMessage(String message) {
    this.message = message;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ClusterPlanStepLogMessageInfo clusterPlanStepLogMessageInfo = (ClusterPlanStepLogMessageInfo) o;
    return Objects.equals(this.timestamp, clusterPlanStepLogMessageInfo.timestamp) &&
        Objects.equals(this.deltaInMillis, clusterPlanStepLogMessageInfo.deltaInMillis) &&
        Objects.equals(this.stage, clusterPlanStepLogMessageInfo.stage) &&
        Objects.equals(this.message, clusterPlanStepLogMessageInfo.message);
  }

  @Override
  public int hashCode() {
    return Objects.hash(timestamp, deltaInMillis, stage, message);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ClusterPlanStepLogMessageInfo {\n");
    
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("    deltaInMillis: ").append(toIndentedString(deltaInMillis)).append("\n");
    sb.append("    stage: ").append(toIndentedString(stage)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
