/*
 * Elastic Cloud API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Node types to enable for an AppSearch instance
 */
@Schema(description = "Node types to enable for an AppSearch instance")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-03-10T16:33:30.970+05:30[Asia/Kolkata]")
public class AppSearchNodeTypes {
  @SerializedName("appserver")
  private Boolean appserver = null;

  @SerializedName("worker")
  private Boolean worker = null;

  public AppSearchNodeTypes appserver(Boolean appserver) {
    this.appserver = appserver;
    return this;
  }

   /**
   * Defines whether this instance should run as Application/API server
   * @return appserver
  **/
  @Schema(required = true, description = "Defines whether this instance should run as Application/API server")
  public Boolean isAppserver() {
    return appserver;
  }

  public void setAppserver(Boolean appserver) {
    this.appserver = appserver;
  }

  public AppSearchNodeTypes worker(Boolean worker) {
    this.worker = worker;
    return this;
  }

   /**
   * Defines whether this instance should run as background worker
   * @return worker
  **/
  @Schema(required = true, description = "Defines whether this instance should run as background worker")
  public Boolean isWorker() {
    return worker;
  }

  public void setWorker(Boolean worker) {
    this.worker = worker;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AppSearchNodeTypes appSearchNodeTypes = (AppSearchNodeTypes) o;
    return Objects.equals(this.appserver, appSearchNodeTypes.appserver) &&
        Objects.equals(this.worker, appSearchNodeTypes.worker);
  }

  @Override
  public int hashCode() {
    return Objects.hash(appserver, worker);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AppSearchNodeTypes {\n");
    
    sb.append("    appserver: ").append(toIndentedString(appserver)).append("\n");
    sb.append("    worker: ").append(toIndentedString(worker)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
