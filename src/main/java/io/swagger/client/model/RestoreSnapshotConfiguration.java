/*
 * Elastic Cloud API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.RestoreSnapshotApiConfiguration;
import io.swagger.client.model.RestoreSnapshotRepoConfiguration;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Restores a snapshot from a local or remote repository.
 */
@Schema(description = "Restores a snapshot from a local or remote repository.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-03-10T16:33:30.970+05:30[Asia/Kolkata]")
public class RestoreSnapshotConfiguration {
  @SerializedName("repository_name")
  private String repositoryName = null;

  @SerializedName("snapshot_name")
  private String snapshotName = null;

  @SerializedName("repository_config")
  private RestoreSnapshotRepoConfiguration repositoryConfig = null;

  @SerializedName("restore_payload")
  private RestoreSnapshotApiConfiguration restorePayload = null;

  /**
   * The restore strategy to use. Defaults to a full restore. Partial restore will attempt to restore unavailable indices only
   */
  @JsonAdapter(StrategyEnum.Adapter.class)
  public enum StrategyEnum {
    PARTIAL("partial"),
    FULL("full"),
    RECOVERY("recovery");

    private String value;

    StrategyEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static StrategyEnum fromValue(String text) {
      for (StrategyEnum b : StrategyEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<StrategyEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StrategyEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StrategyEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return StrategyEnum.fromValue(String.valueOf(value));
      }
    }
  }  @SerializedName("strategy")
  private StrategyEnum strategy = null;

  @SerializedName("source_cluster_id")
  private String sourceClusterId = null;

  public RestoreSnapshotConfiguration repositoryName(String repositoryName) {
    this.repositoryName = repositoryName;
    return this;
  }

   /**
   * If specified, contains the name of the snapshot repository - else will default to the Elastic Cloud system repo (&#x27;found-snapshots&#x27;)
   * @return repositoryName
  **/
  @Schema(description = "If specified, contains the name of the snapshot repository - else will default to the Elastic Cloud system repo ('found-snapshots')")
  public String getRepositoryName() {
    return repositoryName;
  }

  public void setRepositoryName(String repositoryName) {
    this.repositoryName = repositoryName;
  }

  public RestoreSnapshotConfiguration snapshotName(String snapshotName) {
    this.snapshotName = snapshotName;
    return this;
  }

   /**
   * The name of the snapshot to restore. Use &#x27;\\_\\_latest_success\\_\\_&#x27; to get the most recent snapshot from the specified repository
   * @return snapshotName
  **/
  @Schema(required = true, description = "The name of the snapshot to restore. Use '\\_\\_latest_success\\_\\_' to get the most recent snapshot from the specified repository")
  public String getSnapshotName() {
    return snapshotName;
  }

  public void setSnapshotName(String snapshotName) {
    this.snapshotName = snapshotName;
  }

  public RestoreSnapshotConfiguration repositoryConfig(RestoreSnapshotRepoConfiguration repositoryConfig) {
    this.repositoryConfig = repositoryConfig;
    return this;
  }

   /**
   * Get repositoryConfig
   * @return repositoryConfig
  **/
  @Schema(description = "")
  public RestoreSnapshotRepoConfiguration getRepositoryConfig() {
    return repositoryConfig;
  }

  public void setRepositoryConfig(RestoreSnapshotRepoConfiguration repositoryConfig) {
    this.repositoryConfig = repositoryConfig;
  }

  public RestoreSnapshotConfiguration restorePayload(RestoreSnapshotApiConfiguration restorePayload) {
    this.restorePayload = restorePayload;
    return this;
  }

   /**
   * Get restorePayload
   * @return restorePayload
  **/
  @Schema(description = "")
  public RestoreSnapshotApiConfiguration getRestorePayload() {
    return restorePayload;
  }

  public void setRestorePayload(RestoreSnapshotApiConfiguration restorePayload) {
    this.restorePayload = restorePayload;
  }

  public RestoreSnapshotConfiguration strategy(StrategyEnum strategy) {
    this.strategy = strategy;
    return this;
  }

   /**
   * The restore strategy to use. Defaults to a full restore. Partial restore will attempt to restore unavailable indices only
   * @return strategy
  **/
  @Schema(description = "The restore strategy to use. Defaults to a full restore. Partial restore will attempt to restore unavailable indices only")
  public StrategyEnum getStrategy() {
    return strategy;
  }

  public void setStrategy(StrategyEnum strategy) {
    this.strategy = strategy;
  }

  public RestoreSnapshotConfiguration sourceClusterId(String sourceClusterId) {
    this.sourceClusterId = sourceClusterId;
    return this;
  }

   /**
   * If specified, contains the name of the source cluster id. Do not send this if you are sending repository_config
   * @return sourceClusterId
  **/
  @Schema(description = "If specified, contains the name of the source cluster id. Do not send this if you are sending repository_config")
  public String getSourceClusterId() {
    return sourceClusterId;
  }

  public void setSourceClusterId(String sourceClusterId) {
    this.sourceClusterId = sourceClusterId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RestoreSnapshotConfiguration restoreSnapshotConfiguration = (RestoreSnapshotConfiguration) o;
    return Objects.equals(this.repositoryName, restoreSnapshotConfiguration.repositoryName) &&
        Objects.equals(this.snapshotName, restoreSnapshotConfiguration.snapshotName) &&
        Objects.equals(this.repositoryConfig, restoreSnapshotConfiguration.repositoryConfig) &&
        Objects.equals(this.restorePayload, restoreSnapshotConfiguration.restorePayload) &&
        Objects.equals(this.strategy, restoreSnapshotConfiguration.strategy) &&
        Objects.equals(this.sourceClusterId, restoreSnapshotConfiguration.sourceClusterId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(repositoryName, snapshotName, repositoryConfig, restorePayload, strategy, sourceClusterId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RestoreSnapshotConfiguration {\n");
    
    sb.append("    repositoryName: ").append(toIndentedString(repositoryName)).append("\n");
    sb.append("    snapshotName: ").append(toIndentedString(snapshotName)).append("\n");
    sb.append("    repositoryConfig: ").append(toIndentedString(repositoryConfig)).append("\n");
    sb.append("    restorePayload: ").append(toIndentedString(restorePayload)).append("\n");
    sb.append("    strategy: ").append(toIndentedString(strategy)).append("\n");
    sb.append("    sourceClusterId: ").append(toIndentedString(sourceClusterId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
