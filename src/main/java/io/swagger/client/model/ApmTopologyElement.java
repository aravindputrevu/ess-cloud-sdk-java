/*
 * Elastic Cloud API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.ApmConfiguration;
import io.swagger.client.model.TopologySize;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Defines the topology of the APM Server nodes. For example, the number or capacity of the nodes, and where you can allocate the nodes.
 */
@Schema(description = "Defines the topology of the APM Server nodes. For example, the number or capacity of the nodes, and where you can allocate the nodes.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-03-10T16:33:30.970+05:30[Asia/Kolkata]")
public class ApmTopologyElement {
  @SerializedName("instance_configuration_id")
  private String instanceConfigurationId = null;

  @SerializedName("size")
  private TopologySize size = null;

  @SerializedName("zone_count")
  private Integer zoneCount = null;

  @SerializedName("apm")
  private ApmConfiguration apm = null;

  public ApmTopologyElement instanceConfigurationId(String instanceConfigurationId) {
    this.instanceConfigurationId = instanceConfigurationId;
    return this;
  }

   /**
   * Controls the allocation of this topology element as well as allowed sizes and node_types. It needs to match the id of an existing instance configuration.
   * @return instanceConfigurationId
  **/
  @Schema(description = "Controls the allocation of this topology element as well as allowed sizes and node_types. It needs to match the id of an existing instance configuration.")
  public String getInstanceConfigurationId() {
    return instanceConfigurationId;
  }

  public void setInstanceConfigurationId(String instanceConfigurationId) {
    this.instanceConfigurationId = instanceConfigurationId;
  }

  public ApmTopologyElement size(TopologySize size) {
    this.size = size;
    return this;
  }

   /**
   * Get size
   * @return size
  **/
  @Schema(description = "")
  public TopologySize getSize() {
    return size;
  }

  public void setSize(TopologySize size) {
    this.size = size;
  }

  public ApmTopologyElement zoneCount(Integer zoneCount) {
    this.zoneCount = zoneCount;
    return this;
  }

   /**
   * number of zones in which nodes will be placed
   * @return zoneCount
  **/
  @Schema(description = "number of zones in which nodes will be placed")
  public Integer getZoneCount() {
    return zoneCount;
  }

  public void setZoneCount(Integer zoneCount) {
    this.zoneCount = zoneCount;
  }

  public ApmTopologyElement apm(ApmConfiguration apm) {
    this.apm = apm;
    return this;
  }

   /**
   * Get apm
   * @return apm
  **/
  @Schema(description = "")
  public ApmConfiguration getApm() {
    return apm;
  }

  public void setApm(ApmConfiguration apm) {
    this.apm = apm;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApmTopologyElement apmTopologyElement = (ApmTopologyElement) o;
    return Objects.equals(this.instanceConfigurationId, apmTopologyElement.instanceConfigurationId) &&
        Objects.equals(this.size, apmTopologyElement.size) &&
        Objects.equals(this.zoneCount, apmTopologyElement.zoneCount) &&
        Objects.equals(this.apm, apmTopologyElement.apm);
  }

  @Override
  public int hashCode() {
    return Objects.hash(instanceConfigurationId, size, zoneCount, apm);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApmTopologyElement {\n");
    
    sb.append("    instanceConfigurationId: ").append(toIndentedString(instanceConfigurationId)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    zoneCount: ").append(toIndentedString(zoneCount)).append("\n");
    sb.append("    apm: ").append(toIndentedString(apm)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
