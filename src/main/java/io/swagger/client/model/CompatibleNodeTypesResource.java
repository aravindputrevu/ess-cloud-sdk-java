/*
 * Elastic Cloud API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.CapacityConstraintsResource;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * Information about the compatible node types.
 */
@Schema(description = "Information about the compatible node types.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-03-10T16:33:30.970+05:30[Asia/Kolkata]")
public class CompatibleNodeTypesResource {
  @SerializedName("node_type")
  private String nodeType = null;

  @SerializedName("compatible_node_types")
  private List<String> compatibleNodeTypes = new ArrayList<String>();

  @SerializedName("capacity_constraints")
  private CapacityConstraintsResource capacityConstraints = null;

  public CompatibleNodeTypesResource nodeType(String nodeType) {
    this.nodeType = nodeType;
    return this;
  }

   /**
   * Type of this node
   * @return nodeType
  **/
  @Schema(required = true, description = "Type of this node")
  public String getNodeType() {
    return nodeType;
  }

  public void setNodeType(String nodeType) {
    this.nodeType = nodeType;
  }

  public CompatibleNodeTypesResource compatibleNodeTypes(List<String> compatibleNodeTypes) {
    this.compatibleNodeTypes = compatibleNodeTypes;
    return this;
  }

  public CompatibleNodeTypesResource addCompatibleNodeTypesItem(String compatibleNodeTypesItem) {
    this.compatibleNodeTypes.add(compatibleNodeTypesItem);
    return this;
  }

   /**
   * Compatible node types for the this node type
   * @return compatibleNodeTypes
  **/
  @Schema(required = true, description = "Compatible node types for the this node type")
  public List<String> getCompatibleNodeTypes() {
    return compatibleNodeTypes;
  }

  public void setCompatibleNodeTypes(List<String> compatibleNodeTypes) {
    this.compatibleNodeTypes = compatibleNodeTypes;
  }

  public CompatibleNodeTypesResource capacityConstraints(CapacityConstraintsResource capacityConstraints) {
    this.capacityConstraints = capacityConstraints;
    return this;
  }

   /**
   * Get capacityConstraints
   * @return capacityConstraints
  **/
  @Schema(description = "")
  public CapacityConstraintsResource getCapacityConstraints() {
    return capacityConstraints;
  }

  public void setCapacityConstraints(CapacityConstraintsResource capacityConstraints) {
    this.capacityConstraints = capacityConstraints;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CompatibleNodeTypesResource compatibleNodeTypesResource = (CompatibleNodeTypesResource) o;
    return Objects.equals(this.nodeType, compatibleNodeTypesResource.nodeType) &&
        Objects.equals(this.compatibleNodeTypes, compatibleNodeTypesResource.compatibleNodeTypes) &&
        Objects.equals(this.capacityConstraints, compatibleNodeTypesResource.capacityConstraints);
  }

  @Override
  public int hashCode() {
    return Objects.hash(nodeType, compatibleNodeTypes, capacityConstraints);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CompatibleNodeTypesResource {\n");
    
    sb.append("    nodeType: ").append(toIndentedString(nodeType)).append("\n");
    sb.append("    compatibleNodeTypes: ").append(toIndentedString(compatibleNodeTypes)).append("\n");
    sb.append("    capacityConstraints: ").append(toIndentedString(capacityConstraints)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
