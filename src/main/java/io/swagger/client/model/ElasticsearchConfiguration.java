/*
 * Elastic Cloud API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.ElasticsearchCuration;
import io.swagger.client.model.ElasticsearchSystemSettings;
import io.swagger.client.model.ElasticsearchUserBundle;
import io.swagger.client.model.ElasticsearchUserPlugin;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
/**
 * The Elasticsearch cluster settings. When specified at the top level, provides a field-by-field default. When specified at the topology level, provides the override settings.
 */
@Schema(description = "The Elasticsearch cluster settings. When specified at the top level, provides a field-by-field default. When specified at the topology level, provides the override settings.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-03-10T16:33:30.970+05:30[Asia/Kolkata]")
public class ElasticsearchConfiguration {
  @SerializedName("version")
  private String version = null;

  @SerializedName("docker_image")
  private String dockerImage = null;

  @SerializedName("system_settings")
  private ElasticsearchSystemSettings systemSettings = null;

  @SerializedName("user_settings_json")
  private Object userSettingsJson = null;

  @SerializedName("user_settings_yaml")
  private String userSettingsYaml = null;

  @SerializedName("user_settings_override_json")
  private Object userSettingsOverrideJson = null;

  @SerializedName("user_settings_override_yaml")
  private String userSettingsOverrideYaml = null;

  @SerializedName("enabled_built_in_plugins")
  private List<String> enabledBuiltInPlugins = null;

  @SerializedName("user_plugins")
  private List<ElasticsearchUserPlugin> userPlugins = null;

  @SerializedName("user_bundles")
  private List<ElasticsearchUserBundle> userBundles = null;

  @SerializedName("curation")
  private ElasticsearchCuration curation = null;

  @SerializedName("node_attributes")
  private Map<String, String> nodeAttributes = null;

  public ElasticsearchConfiguration version(String version) {
    this.version = version;
    return this;
  }

   /**
   * The version of the Elasticsearch cluster (must be one of the ECE supported versions). Currently cannot be different across the topology (and is generally specified in the globals)
   * @return version
  **/
  @Schema(description = "The version of the Elasticsearch cluster (must be one of the ECE supported versions). Currently cannot be different across the topology (and is generally specified in the globals)")
  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }

  public ElasticsearchConfiguration dockerImage(String dockerImage) {
    this.dockerImage = dockerImage;
    return this;
  }

   /**
   * A docker URI that allows overriding of the default docker image specified for this version
   * @return dockerImage
  **/
  @Schema(description = "A docker URI that allows overriding of the default docker image specified for this version")
  public String getDockerImage() {
    return dockerImage;
  }

  public void setDockerImage(String dockerImage) {
    this.dockerImage = dockerImage;
  }

  public ElasticsearchConfiguration systemSettings(ElasticsearchSystemSettings systemSettings) {
    this.systemSettings = systemSettings;
    return this;
  }

   /**
   * Get systemSettings
   * @return systemSettings
  **/
  @Schema(description = "")
  public ElasticsearchSystemSettings getSystemSettings() {
    return systemSettings;
  }

  public void setSystemSettings(ElasticsearchSystemSettings systemSettings) {
    this.systemSettings = systemSettings;
  }

  public ElasticsearchConfiguration userSettingsJson(Object userSettingsJson) {
    this.userSettingsJson = userSettingsJson;
    return this;
  }

   /**
   * An arbitrary JSON object allowing cluster owners to set their parameters (only one of this and &#x27;user_settings_yaml&#x27; is allowed), provided they are on the whitelist (&#x27;user_settings_whitelist&#x27;) and not on the blacklist (&#x27;user_settings_blacklist&#x27;). NOTES: (This field together with &#x27;user_settings_override*&#x27; and &#x27;system_settings&#x27; defines the total set of Elasticsearch settings)
   * @return userSettingsJson
  **/
  @Schema(description = "An arbitrary JSON object allowing cluster owners to set their parameters (only one of this and 'user_settings_yaml' is allowed), provided they are on the whitelist ('user_settings_whitelist') and not on the blacklist ('user_settings_blacklist'). NOTES: (This field together with 'user_settings_override*' and 'system_settings' defines the total set of Elasticsearch settings)")
  public Object getUserSettingsJson() {
    return userSettingsJson;
  }

  public void setUserSettingsJson(Object userSettingsJson) {
    this.userSettingsJson = userSettingsJson;
  }

  public ElasticsearchConfiguration userSettingsYaml(String userSettingsYaml) {
    this.userSettingsYaml = userSettingsYaml;
    return this;
  }

   /**
   * An arbitrary YAML object allowing cluster owners to set their parameters (only one of this and &#x27;user_settings_json&#x27; is allowed), provided they are on the whitelist (&#x27;user_settings_whitelist&#x27;) and not on the blacklist (&#x27;user_settings_blacklist&#x27;). NOTES: (This field together with &#x27;user_settings_override*&#x27; and &#x27;system_settings&#x27; defines the total set of Elasticsearch settings)
   * @return userSettingsYaml
  **/
  @Schema(description = "An arbitrary YAML object allowing cluster owners to set their parameters (only one of this and 'user_settings_json' is allowed), provided they are on the whitelist ('user_settings_whitelist') and not on the blacklist ('user_settings_blacklist'). NOTES: (This field together with 'user_settings_override*' and 'system_settings' defines the total set of Elasticsearch settings)")
  public String getUserSettingsYaml() {
    return userSettingsYaml;
  }

  public void setUserSettingsYaml(String userSettingsYaml) {
    this.userSettingsYaml = userSettingsYaml;
  }

  public ElasticsearchConfiguration userSettingsOverrideJson(Object userSettingsOverrideJson) {
    this.userSettingsOverrideJson = userSettingsOverrideJson;
    return this;
  }

   /**
   * An arbitrary JSON object allowing ECE admins owners to set clusters&#x27; parameters (only one of this and &#x27;user_settings_override_yaml&#x27; is allowed), ie in addition to the documented &#x27;system_settings&#x27;. NOTES: (This field together with &#x27;system_settings&#x27; and &#x27;user_settings*&#x27; defines the total set of Elasticsearch settings)
   * @return userSettingsOverrideJson
  **/
  @Schema(description = "An arbitrary JSON object allowing ECE admins owners to set clusters' parameters (only one of this and 'user_settings_override_yaml' is allowed), ie in addition to the documented 'system_settings'. NOTES: (This field together with 'system_settings' and 'user_settings*' defines the total set of Elasticsearch settings)")
  public Object getUserSettingsOverrideJson() {
    return userSettingsOverrideJson;
  }

  public void setUserSettingsOverrideJson(Object userSettingsOverrideJson) {
    this.userSettingsOverrideJson = userSettingsOverrideJson;
  }

  public ElasticsearchConfiguration userSettingsOverrideYaml(String userSettingsOverrideYaml) {
    this.userSettingsOverrideYaml = userSettingsOverrideYaml;
    return this;
  }

   /**
   * An arbitrary YAML object allowing ECE admins owners to set clusters&#x27; parameters (only one of this and &#x27;user_settings_override_json&#x27; is allowed), ie in addition to the documented &#x27;system_settings&#x27;. NOTES: (This field together with &#x27;system_settings&#x27; and &#x27;user_settings*&#x27; defines the total set of Elasticsearch settings)
   * @return userSettingsOverrideYaml
  **/
  @Schema(description = "An arbitrary YAML object allowing ECE admins owners to set clusters' parameters (only one of this and 'user_settings_override_json' is allowed), ie in addition to the documented 'system_settings'. NOTES: (This field together with 'system_settings' and 'user_settings*' defines the total set of Elasticsearch settings)")
  public String getUserSettingsOverrideYaml() {
    return userSettingsOverrideYaml;
  }

  public void setUserSettingsOverrideYaml(String userSettingsOverrideYaml) {
    this.userSettingsOverrideYaml = userSettingsOverrideYaml;
  }

  public ElasticsearchConfiguration enabledBuiltInPlugins(List<String> enabledBuiltInPlugins) {
    this.enabledBuiltInPlugins = enabledBuiltInPlugins;
    return this;
  }

  public ElasticsearchConfiguration addEnabledBuiltInPluginsItem(String enabledBuiltInPluginsItem) {
    if (this.enabledBuiltInPlugins == null) {
      this.enabledBuiltInPlugins = new ArrayList<String>();
    }
    this.enabledBuiltInPlugins.add(enabledBuiltInPluginsItem);
    return this;
  }

   /**
   * A list of plugin names from the Elastic-supported subset that are bundled with the version images. NOTES: (Users should consult the Elastic stack objects to see what plugins are available, this is currently only available from the UI)
   * @return enabledBuiltInPlugins
  **/
  @Schema(description = "A list of plugin names from the Elastic-supported subset that are bundled with the version images. NOTES: (Users should consult the Elastic stack objects to see what plugins are available, this is currently only available from the UI)")
  public List<String> getEnabledBuiltInPlugins() {
    return enabledBuiltInPlugins;
  }

  public void setEnabledBuiltInPlugins(List<String> enabledBuiltInPlugins) {
    this.enabledBuiltInPlugins = enabledBuiltInPlugins;
  }

  public ElasticsearchConfiguration userPlugins(List<ElasticsearchUserPlugin> userPlugins) {
    this.userPlugins = userPlugins;
    return this;
  }

  public ElasticsearchConfiguration addUserPluginsItem(ElasticsearchUserPlugin userPluginsItem) {
    if (this.userPlugins == null) {
      this.userPlugins = new ArrayList<ElasticsearchUserPlugin>();
    }
    this.userPlugins.add(userPluginsItem);
    return this;
  }

   /**
   * A list of admin-uploaded plugin objects that are available for this user.
   * @return userPlugins
  **/
  @Schema(description = "A list of admin-uploaded plugin objects that are available for this user.")
  public List<ElasticsearchUserPlugin> getUserPlugins() {
    return userPlugins;
  }

  public void setUserPlugins(List<ElasticsearchUserPlugin> userPlugins) {
    this.userPlugins = userPlugins;
  }

  public ElasticsearchConfiguration userBundles(List<ElasticsearchUserBundle> userBundles) {
    this.userBundles = userBundles;
    return this;
  }

  public ElasticsearchConfiguration addUserBundlesItem(ElasticsearchUserBundle userBundlesItem) {
    if (this.userBundles == null) {
      this.userBundles = new ArrayList<ElasticsearchUserBundle>();
    }
    this.userBundles.add(userBundlesItem);
    return this;
  }

   /**
   * A list of admin-uploaded bundle objects (eg scripts, synonym files) that are available for this user.
   * @return userBundles
  **/
  @Schema(description = "A list of admin-uploaded bundle objects (eg scripts, synonym files) that are available for this user.")
  public List<ElasticsearchUserBundle> getUserBundles() {
    return userBundles;
  }

  public void setUserBundles(List<ElasticsearchUserBundle> userBundles) {
    this.userBundles = userBundles;
  }

  public ElasticsearchConfiguration curation(ElasticsearchCuration curation) {
    this.curation = curation;
    return this;
  }

   /**
   * Get curation
   * @return curation
  **/
  @Schema(description = "")
  public ElasticsearchCuration getCuration() {
    return curation;
  }

  public void setCuration(ElasticsearchCuration curation) {
    this.curation = curation;
  }

  public ElasticsearchConfiguration nodeAttributes(Map<String, String> nodeAttributes) {
    this.nodeAttributes = nodeAttributes;
    return this;
  }

  public ElasticsearchConfiguration putNodeAttributesItem(String key, String nodeAttributesItem) {
    if (this.nodeAttributes == null) {
      this.nodeAttributes = new HashMap<String, String>();
    }
    this.nodeAttributes.put(key, nodeAttributesItem);
    return this;
  }

   /**
   * Defines the Elasticsearch node attributes for the instances in the topology
   * @return nodeAttributes
  **/
  @Schema(description = "Defines the Elasticsearch node attributes for the instances in the topology")
  public Map<String, String> getNodeAttributes() {
    return nodeAttributes;
  }

  public void setNodeAttributes(Map<String, String> nodeAttributes) {
    this.nodeAttributes = nodeAttributes;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ElasticsearchConfiguration elasticsearchConfiguration = (ElasticsearchConfiguration) o;
    return Objects.equals(this.version, elasticsearchConfiguration.version) &&
        Objects.equals(this.dockerImage, elasticsearchConfiguration.dockerImage) &&
        Objects.equals(this.systemSettings, elasticsearchConfiguration.systemSettings) &&
        Objects.equals(this.userSettingsJson, elasticsearchConfiguration.userSettingsJson) &&
        Objects.equals(this.userSettingsYaml, elasticsearchConfiguration.userSettingsYaml) &&
        Objects.equals(this.userSettingsOverrideJson, elasticsearchConfiguration.userSettingsOverrideJson) &&
        Objects.equals(this.userSettingsOverrideYaml, elasticsearchConfiguration.userSettingsOverrideYaml) &&
        Objects.equals(this.enabledBuiltInPlugins, elasticsearchConfiguration.enabledBuiltInPlugins) &&
        Objects.equals(this.userPlugins, elasticsearchConfiguration.userPlugins) &&
        Objects.equals(this.userBundles, elasticsearchConfiguration.userBundles) &&
        Objects.equals(this.curation, elasticsearchConfiguration.curation) &&
        Objects.equals(this.nodeAttributes, elasticsearchConfiguration.nodeAttributes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(version, dockerImage, systemSettings, userSettingsJson, userSettingsYaml, userSettingsOverrideJson, userSettingsOverrideYaml, enabledBuiltInPlugins, userPlugins, userBundles, curation, nodeAttributes);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ElasticsearchConfiguration {\n");
    
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    dockerImage: ").append(toIndentedString(dockerImage)).append("\n");
    sb.append("    systemSettings: ").append(toIndentedString(systemSettings)).append("\n");
    sb.append("    userSettingsJson: ").append(toIndentedString(userSettingsJson)).append("\n");
    sb.append("    userSettingsYaml: ").append(toIndentedString(userSettingsYaml)).append("\n");
    sb.append("    userSettingsOverrideJson: ").append(toIndentedString(userSettingsOverrideJson)).append("\n");
    sb.append("    userSettingsOverrideYaml: ").append(toIndentedString(userSettingsOverrideYaml)).append("\n");
    sb.append("    enabledBuiltInPlugins: ").append(toIndentedString(enabledBuiltInPlugins)).append("\n");
    sb.append("    userPlugins: ").append(toIndentedString(userPlugins)).append("\n");
    sb.append("    userBundles: ").append(toIndentedString(userBundles)).append("\n");
    sb.append("    curation: ").append(toIndentedString(curation)).append("\n");
    sb.append("    nodeAttributes: ").append(toIndentedString(nodeAttributes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
