/*
 * Elastic Cloud API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.QueryContainer;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * A query that matches nested objects.
 */
@Schema(description = "A query that matches nested objects.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-03-10T16:33:30.970+05:30[Asia/Kolkata]")
public class NestedQuery {
  @SerializedName("query")
  private QueryContainer query = null;

  @SerializedName("path")
  private String path = null;

  /**
   * Allows to specify how inner children matching affects score of the parent. Refer to the Elasticsearch documentation for details.
   */
  @JsonAdapter(ScoreModeEnum.Adapter.class)
  public enum ScoreModeEnum {
    AVG("avg"),
    SUM("sum"),
    MIN("min"),
    MAX("max"),
    NONE("none");

    private String value;

    ScoreModeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static ScoreModeEnum fromValue(String text) {
      for (ScoreModeEnum b : ScoreModeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<ScoreModeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ScoreModeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ScoreModeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return ScoreModeEnum.fromValue(String.valueOf(value));
      }
    }
  }  @SerializedName("score_mode")
  private ScoreModeEnum scoreMode = null;

  public NestedQuery query(QueryContainer query) {
    this.query = query;
    return this;
  }

   /**
   * Get query
   * @return query
  **/
  @Schema(required = true, description = "")
  public QueryContainer getQuery() {
    return query;
  }

  public void setQuery(QueryContainer query) {
    this.query = query;
  }

  public NestedQuery path(String path) {
    this.path = path;
    return this;
  }

   /**
   * The path to the nested object.
   * @return path
  **/
  @Schema(required = true, description = "The path to the nested object.")
  public String getPath() {
    return path;
  }

  public void setPath(String path) {
    this.path = path;
  }

  public NestedQuery scoreMode(ScoreModeEnum scoreMode) {
    this.scoreMode = scoreMode;
    return this;
  }

   /**
   * Allows to specify how inner children matching affects score of the parent. Refer to the Elasticsearch documentation for details.
   * @return scoreMode
  **/
  @Schema(description = "Allows to specify how inner children matching affects score of the parent. Refer to the Elasticsearch documentation for details.")
  public ScoreModeEnum getScoreMode() {
    return scoreMode;
  }

  public void setScoreMode(ScoreModeEnum scoreMode) {
    this.scoreMode = scoreMode;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NestedQuery nestedQuery = (NestedQuery) o;
    return Objects.equals(this.query, nestedQuery.query) &&
        Objects.equals(this.path, nestedQuery.path) &&
        Objects.equals(this.scoreMode, nestedQuery.scoreMode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(query, path, scoreMode);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NestedQuery {\n");
    
    sb.append("    query: ").append(toIndentedString(query)).append("\n");
    sb.append("    path: ").append(toIndentedString(path)).append("\n");
    sb.append("    scoreMode: ").append(toIndentedString(scoreMode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
