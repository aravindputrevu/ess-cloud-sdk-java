/*
 * Elastic Cloud API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.ProxiesFilter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * A set of proxy filters with an expected number of matching proxies.
 */
@Schema(description = "A set of proxy filters with an expected number of matching proxies.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-03-10T16:33:30.970+05:30[Asia/Kolkata]")
public class ProxiesFilteredGroup {
  @SerializedName("id")
  private String id = null;

  @SerializedName("filters")
  private List<ProxiesFilter> filters = new ArrayList<ProxiesFilter>();

  @SerializedName("expected_proxies_count")
  private Integer expectedProxiesCount = null;

  public ProxiesFilteredGroup id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Identifier of the filtered group of proxies
   * @return id
  **/
  @Schema(description = "Identifier of the filtered group of proxies")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public ProxiesFilteredGroup filters(List<ProxiesFilter> filters) {
    this.filters = filters;
    return this;
  }

  public ProxiesFilteredGroup addFiltersItem(ProxiesFilter filtersItem) {
    this.filters.add(filtersItem);
    return this;
  }

   /**
   * Filters to be matched
   * @return filters
  **/
  @Schema(required = true, description = "Filters to be matched")
  public List<ProxiesFilter> getFilters() {
    return filters;
  }

  public void setFilters(List<ProxiesFilter> filters) {
    this.filters = filters;
  }

  public ProxiesFilteredGroup expectedProxiesCount(Integer expectedProxiesCount) {
    this.expectedProxiesCount = expectedProxiesCount;
    return this;
  }

   /**
   * Expected minimum number of proxies matching all filters in this group
   * @return expectedProxiesCount
  **/
  @Schema(required = true, description = "Expected minimum number of proxies matching all filters in this group")
  public Integer getExpectedProxiesCount() {
    return expectedProxiesCount;
  }

  public void setExpectedProxiesCount(Integer expectedProxiesCount) {
    this.expectedProxiesCount = expectedProxiesCount;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProxiesFilteredGroup proxiesFilteredGroup = (ProxiesFilteredGroup) o;
    return Objects.equals(this.id, proxiesFilteredGroup.id) &&
        Objects.equals(this.filters, proxiesFilteredGroup.filters) &&
        Objects.equals(this.expectedProxiesCount, proxiesFilteredGroup.expectedProxiesCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, filters, expectedProxiesCount);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProxiesFilteredGroup {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    filters: ").append(toIndentedString(filters)).append("\n");
    sb.append("    expectedProxiesCount: ").append(toIndentedString(expectedProxiesCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
