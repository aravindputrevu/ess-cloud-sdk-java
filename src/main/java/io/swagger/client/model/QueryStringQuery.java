/*
 * Elastic Cloud API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * A query that uses the &#x60;SimpleQueryParser&#x60; for parsing.
 */
@Schema(description = "A query that uses the `SimpleQueryParser` for parsing.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-03-10T16:33:30.970+05:30[Asia/Kolkata]")
public class QueryStringQuery {
  @SerializedName("query")
  private String query = null;

  @SerializedName("default_field")
  private String defaultField = null;

  @SerializedName("analyzer")
  private String analyzer = null;

  @SerializedName("default_operator")
  private String defaultOperator = null;

  @SerializedName("allow_leading_wildcard")
  private Boolean allowLeadingWildcard = null;

  public QueryStringQuery query(String query) {
    this.query = query;
    return this;
  }

   /**
   * The actual query to be parsed.
   * @return query
  **/
  @Schema(required = true, description = "The actual query to be parsed.")
  public String getQuery() {
    return query;
  }

  public void setQuery(String query) {
    this.query = query;
  }

  public QueryStringQuery defaultField(String defaultField) {
    this.defaultField = defaultField;
    return this;
  }

   /**
   * The default field for query terms if no prefix field is specified.
   * @return defaultField
  **/
  @Schema(description = "The default field for query terms if no prefix field is specified.")
  public String getDefaultField() {
    return defaultField;
  }

  public void setDefaultField(String defaultField) {
    this.defaultField = defaultField;
  }

  public QueryStringQuery analyzer(String analyzer) {
    this.analyzer = analyzer;
    return this;
  }

   /**
   * The analyzer used to analyze each term of the query when creating composite queries.
   * @return analyzer
  **/
  @Schema(description = "The analyzer used to analyze each term of the query when creating composite queries.")
  public String getAnalyzer() {
    return analyzer;
  }

  public void setAnalyzer(String analyzer) {
    this.analyzer = analyzer;
  }

  public QueryStringQuery defaultOperator(String defaultOperator) {
    this.defaultOperator = defaultOperator;
    return this;
  }

   /**
   * The default operator used if no explicit operator is specified.
   * @return defaultOperator
  **/
  @Schema(description = "The default operator used if no explicit operator is specified.")
  public String getDefaultOperator() {
    return defaultOperator;
  }

  public void setDefaultOperator(String defaultOperator) {
    this.defaultOperator = defaultOperator;
  }

  public QueryStringQuery allowLeadingWildcard(Boolean allowLeadingWildcard) {
    this.allowLeadingWildcard = allowLeadingWildcard;
    return this;
  }

   /**
   * When set, * or ? are allowed as the first character. Defaults to false.
   * @return allowLeadingWildcard
  **/
  @Schema(description = "When set, * or ? are allowed as the first character. Defaults to false.")
  public Boolean isAllowLeadingWildcard() {
    return allowLeadingWildcard;
  }

  public void setAllowLeadingWildcard(Boolean allowLeadingWildcard) {
    this.allowLeadingWildcard = allowLeadingWildcard;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    QueryStringQuery queryStringQuery = (QueryStringQuery) o;
    return Objects.equals(this.query, queryStringQuery.query) &&
        Objects.equals(this.defaultField, queryStringQuery.defaultField) &&
        Objects.equals(this.analyzer, queryStringQuery.analyzer) &&
        Objects.equals(this.defaultOperator, queryStringQuery.defaultOperator) &&
        Objects.equals(this.allowLeadingWildcard, queryStringQuery.allowLeadingWildcard);
  }

  @Override
  public int hashCode() {
    return Objects.hash(query, defaultField, analyzer, defaultOperator, allowLeadingWildcard);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class QueryStringQuery {\n");
    
    sb.append("    query: ").append(toIndentedString(query)).append("\n");
    sb.append("    defaultField: ").append(toIndentedString(defaultField)).append("\n");
    sb.append("    analyzer: ").append(toIndentedString(analyzer)).append("\n");
    sb.append("    defaultOperator: ").append(toIndentedString(defaultOperator)).append("\n");
    sb.append("    allowLeadingWildcard: ").append(toIndentedString(allowLeadingWildcard)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
