/*
 * Elastic Cloud API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.ConstructorHealthStatus;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Information about the constructor.
 */
@Schema(description = "Information about the constructor.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-03-10T16:33:30.970+05:30[Asia/Kolkata]")
public class ConstructorInfo {
  @SerializedName("status")
  private ConstructorHealthStatus status = null;

  @SerializedName("constructor_id")
  private String constructorId = null;

  public ConstructorInfo status(ConstructorHealthStatus status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public ConstructorHealthStatus getStatus() {
    return status;
  }

  public void setStatus(ConstructorHealthStatus status) {
    this.status = status;
  }

  public ConstructorInfo constructorId(String constructorId) {
    this.constructorId = constructorId;
    return this;
  }

   /**
   * Identifier for this constructor
   * @return constructorId
  **/
  @Schema(description = "Identifier for this constructor")
  public String getConstructorId() {
    return constructorId;
  }

  public void setConstructorId(String constructorId) {
    this.constructorId = constructorId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConstructorInfo constructorInfo = (ConstructorInfo) o;
    return Objects.equals(this.status, constructorInfo.status) &&
        Objects.equals(this.constructorId, constructorInfo.constructorId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(status, constructorId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConstructorInfo {\n");
    
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    constructorId: ").append(toIndentedString(constructorId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
