/*
 * Elastic Cloud API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.ClusterSnapshotRepositoryDefault;
import io.swagger.client.model.ClusterSnapshotRepositoryReference;
import io.swagger.client.model.ClusterSnapshotRepositoryStatic;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Information about the Elasticsearch cluster snapshot repository.
 */
@Schema(description = "Information about the Elasticsearch cluster snapshot repository.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-03-10T16:33:30.970+05:30[Asia/Kolkata]")
public class ClusterSnapshotRepositoryInfo {
  @SerializedName("static")
  private ClusterSnapshotRepositoryStatic _static = null;

  @SerializedName("reference")
  private ClusterSnapshotRepositoryReference reference = null;

  @SerializedName("default")
  private ClusterSnapshotRepositoryDefault _default = null;

  public ClusterSnapshotRepositoryInfo _static(ClusterSnapshotRepositoryStatic _static) {
    this._static = _static;
    return this;
  }

   /**
   * Get _static
   * @return _static
  **/
  @Schema(description = "")
  public ClusterSnapshotRepositoryStatic getStatic() {
    return _static;
  }

  public void setStatic(ClusterSnapshotRepositoryStatic _static) {
    this._static = _static;
  }

  public ClusterSnapshotRepositoryInfo reference(ClusterSnapshotRepositoryReference reference) {
    this.reference = reference;
    return this;
  }

   /**
   * Get reference
   * @return reference
  **/
  @Schema(description = "")
  public ClusterSnapshotRepositoryReference getReference() {
    return reference;
  }

  public void setReference(ClusterSnapshotRepositoryReference reference) {
    this.reference = reference;
  }

  public ClusterSnapshotRepositoryInfo _default(ClusterSnapshotRepositoryDefault _default) {
    this._default = _default;
    return this;
  }

   /**
   * Get _default
   * @return _default
  **/
  @Schema(description = "")
  public ClusterSnapshotRepositoryDefault getDefault() {
    return _default;
  }

  public void setDefault(ClusterSnapshotRepositoryDefault _default) {
    this._default = _default;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ClusterSnapshotRepositoryInfo clusterSnapshotRepositoryInfo = (ClusterSnapshotRepositoryInfo) o;
    return Objects.equals(this._static, clusterSnapshotRepositoryInfo._static) &&
        Objects.equals(this.reference, clusterSnapshotRepositoryInfo.reference) &&
        Objects.equals(this._default, clusterSnapshotRepositoryInfo._default);
  }

  @Override
  public int hashCode() {
    return Objects.hash(_static, reference, _default);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ClusterSnapshotRepositoryInfo {\n");
    
    sb.append("    _static: ").append(toIndentedString(_static)).append("\n");
    sb.append("    reference: ").append(toIndentedString(reference)).append("\n");
    sb.append("    _default: ").append(toIndentedString(_default)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
