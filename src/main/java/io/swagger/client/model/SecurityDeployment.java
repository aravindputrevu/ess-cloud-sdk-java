/*
 * Elastic Cloud API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * The Elasticsearch security deployment.
 */
@Schema(description = "The Elasticsearch security deployment.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-03-10T16:33:30.970+05:30[Asia/Kolkata]")
public class SecurityDeployment {
  @SerializedName("cluster_id")
  private String clusterId = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("version")
  private String version = null;

  /**
   * The current status of the cluster
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    INITIALIZING("initializing"),
    STOPPING("stopping"),
    STOPPED("stopped"),
    REBOOTING("rebooting"),
    RESTARTING("restarting"),
    RECONFIGURING("reconfiguring"),
    STARTED("started");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return StatusEnum.fromValue(String.valueOf(value));
      }
    }
  }  @SerializedName("status")
  private StatusEnum status = null;

  @SerializedName("has_pending_plan")
  private Boolean hasPendingPlan = null;

  @SerializedName("is_healthy")
  private Boolean isHealthy = null;

  @SerializedName("is_enabled")
  private Boolean isEnabled = null;

  public SecurityDeployment clusterId(String clusterId) {
    this.clusterId = clusterId;
    return this;
  }

   /**
   * The identifier for the security deployment cluster
   * @return clusterId
  **/
  @Schema(required = true, description = "The identifier for the security deployment cluster")
  public String getClusterId() {
    return clusterId;
  }

  public void setClusterId(String clusterId) {
    this.clusterId = clusterId;
  }

  public SecurityDeployment name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The name of the security deployment cluster
   * @return name
  **/
  @Schema(required = true, description = "The name of the security deployment cluster")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public SecurityDeployment version(String version) {
    this.version = version;
    return this;
  }

   /**
   * The version of the Elasticsearch cluster
   * @return version
  **/
  @Schema(description = "The version of the Elasticsearch cluster")
  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }

  public SecurityDeployment status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * The current status of the cluster
   * @return status
  **/
  @Schema(required = true, description = "The current status of the cluster")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public SecurityDeployment hasPendingPlan(Boolean hasPendingPlan) {
    this.hasPendingPlan = hasPendingPlan;
    return this;
  }

   /**
   * True if a pending plan is in progress
   * @return hasPendingPlan
  **/
  @Schema(required = true, description = "True if a pending plan is in progress")
  public Boolean isHasPendingPlan() {
    return hasPendingPlan;
  }

  public void setHasPendingPlan(Boolean hasPendingPlan) {
    this.hasPendingPlan = hasPendingPlan;
  }

  public SecurityDeployment isHealthy(Boolean isHealthy) {
    this.isHealthy = isHealthy;
    return this;
  }

   /**
   * True if the cluster is healthy
   * @return isHealthy
  **/
  @Schema(required = true, description = "True if the cluster is healthy")
  public Boolean isIsHealthy() {
    return isHealthy;
  }

  public void setIsHealthy(Boolean isHealthy) {
    this.isHealthy = isHealthy;
  }

  public SecurityDeployment isEnabled(Boolean isEnabled) {
    this.isEnabled = isEnabled;
    return this;
  }

   /**
   * True if the security cluster is currently enabled
   * @return isEnabled
  **/
  @Schema(required = true, description = "True if the security cluster is currently enabled")
  public Boolean isIsEnabled() {
    return isEnabled;
  }

  public void setIsEnabled(Boolean isEnabled) {
    this.isEnabled = isEnabled;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SecurityDeployment securityDeployment = (SecurityDeployment) o;
    return Objects.equals(this.clusterId, securityDeployment.clusterId) &&
        Objects.equals(this.name, securityDeployment.name) &&
        Objects.equals(this.version, securityDeployment.version) &&
        Objects.equals(this.status, securityDeployment.status) &&
        Objects.equals(this.hasPendingPlan, securityDeployment.hasPendingPlan) &&
        Objects.equals(this.isHealthy, securityDeployment.isHealthy) &&
        Objects.equals(this.isEnabled, securityDeployment.isEnabled);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clusterId, name, version, status, hasPendingPlan, isHealthy, isEnabled);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SecurityDeployment {\n");
    
    sb.append("    clusterId: ").append(toIndentedString(clusterId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    hasPendingPlan: ").append(toIndentedString(hasPendingPlan)).append("\n");
    sb.append("    isHealthy: ").append(toIndentedString(isHealthy)).append("\n");
    sb.append("    isEnabled: ").append(toIndentedString(isEnabled)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
