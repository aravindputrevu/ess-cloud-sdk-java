/*
 * Elastic Cloud API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * A structure that defines a curated subset of the APM Server settings.  TIP: To define the complete set of APM Server setting, use &#x60;ApmSystemSettings&#x60; with &#x60;user_settings_override_&#x60; and &#x60;user_settings_&#x60;.
 */
@Schema(description = "A structure that defines a curated subset of the APM Server settings.  TIP: To define the complete set of APM Server setting, use `ApmSystemSettings` with `user_settings_override_` and `user_settings_`.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-03-10T16:33:30.970+05:30[Asia/Kolkata]")
public class ApmSystemSettings {
  @SerializedName("elasticsearch_url")
  private String elasticsearchUrl = null;

  @SerializedName("kibana_url")
  private String kibanaUrl = null;

  @SerializedName("elasticsearch_username")
  private String elasticsearchUsername = null;

  @SerializedName("elasticsearch_password")
  private String elasticsearchPassword = null;

  @SerializedName("secret_token")
  private String secretToken = null;

  @SerializedName("debug_enabled")
  private Boolean debugEnabled = null;

  public ApmSystemSettings elasticsearchUrl(String elasticsearchUrl) {
    this.elasticsearchUrl = elasticsearchUrl;
    return this;
  }

   /**
   * Optionally override the URL to which to send data (for advanced users only, if unspecified the system selects an internal URL)
   * @return elasticsearchUrl
  **/
  @Schema(description = "Optionally override the URL to which to send data (for advanced users only, if unspecified the system selects an internal URL)")
  public String getElasticsearchUrl() {
    return elasticsearchUrl;
  }

  public void setElasticsearchUrl(String elasticsearchUrl) {
    this.elasticsearchUrl = elasticsearchUrl;
  }

  public ApmSystemSettings kibanaUrl(String kibanaUrl) {
    this.kibanaUrl = kibanaUrl;
    return this;
  }

   /**
   * Optionally override the URL to which to send data (for advanced users only, if unspecified the system selects an internal URL)
   * @return kibanaUrl
  **/
  @Schema(description = "Optionally override the URL to which to send data (for advanced users only, if unspecified the system selects an internal URL)")
  public String getKibanaUrl() {
    return kibanaUrl;
  }

  public void setKibanaUrl(String kibanaUrl) {
    this.kibanaUrl = kibanaUrl;
  }

  public ApmSystemSettings elasticsearchUsername(String elasticsearchUsername) {
    this.elasticsearchUsername = elasticsearchUsername;
    return this;
  }

   /**
   * Optionally override the account within APM - defaults to a system account that always exists (if specified, the password must also be specified)
   * @return elasticsearchUsername
  **/
  @Schema(description = "Optionally override the account within APM - defaults to a system account that always exists (if specified, the password must also be specified)")
  public String getElasticsearchUsername() {
    return elasticsearchUsername;
  }

  public void setElasticsearchUsername(String elasticsearchUsername) {
    this.elasticsearchUsername = elasticsearchUsername;
  }

  public ApmSystemSettings elasticsearchPassword(String elasticsearchPassword) {
    this.elasticsearchPassword = elasticsearchPassword;
    return this;
  }

   /**
   * Optionally override the account within APM - defaults to a system account that always exists (if specified, the username must also be specified)
   * @return elasticsearchPassword
  **/
  @Schema(description = "Optionally override the account within APM - defaults to a system account that always exists (if specified, the username must also be specified)")
  public String getElasticsearchPassword() {
    return elasticsearchPassword;
  }

  public void setElasticsearchPassword(String elasticsearchPassword) {
    this.elasticsearchPassword = elasticsearchPassword;
  }

  public ApmSystemSettings secretToken(String secretToken) {
    this.secretToken = secretToken;
    return this;
  }

   /**
   * Optionally override the secret token within APM - defaults to the previously existing secretToken
   * @return secretToken
  **/
  @Schema(description = "Optionally override the secret token within APM - defaults to the previously existing secretToken")
  public String getSecretToken() {
    return secretToken;
  }

  public void setSecretToken(String secretToken) {
    this.secretToken = secretToken;
  }

  public ApmSystemSettings debugEnabled(Boolean debugEnabled) {
    this.debugEnabled = debugEnabled;
    return this;
  }

   /**
   * Optionally enable debug mode for APM servers - defaults false
   * @return debugEnabled
  **/
  @Schema(description = "Optionally enable debug mode for APM servers - defaults false")
  public Boolean isDebugEnabled() {
    return debugEnabled;
  }

  public void setDebugEnabled(Boolean debugEnabled) {
    this.debugEnabled = debugEnabled;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApmSystemSettings apmSystemSettings = (ApmSystemSettings) o;
    return Objects.equals(this.elasticsearchUrl, apmSystemSettings.elasticsearchUrl) &&
        Objects.equals(this.kibanaUrl, apmSystemSettings.kibanaUrl) &&
        Objects.equals(this.elasticsearchUsername, apmSystemSettings.elasticsearchUsername) &&
        Objects.equals(this.elasticsearchPassword, apmSystemSettings.elasticsearchPassword) &&
        Objects.equals(this.secretToken, apmSystemSettings.secretToken) &&
        Objects.equals(this.debugEnabled, apmSystemSettings.debugEnabled);
  }

  @Override
  public int hashCode() {
    return Objects.hash(elasticsearchUrl, kibanaUrl, elasticsearchUsername, elasticsearchPassword, secretToken, debugEnabled);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApmSystemSettings {\n");
    
    sb.append("    elasticsearchUrl: ").append(toIndentedString(elasticsearchUrl)).append("\n");
    sb.append("    kibanaUrl: ").append(toIndentedString(kibanaUrl)).append("\n");
    sb.append("    elasticsearchUsername: ").append(toIndentedString(elasticsearchUsername)).append("\n");
    sb.append("    elasticsearchPassword: ").append(toIndentedString(elasticsearchPassword)).append("\n");
    sb.append("    secretToken: ").append(toIndentedString(secretToken)).append("\n");
    sb.append("    debugEnabled: ").append(toIndentedString(debugEnabled)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
