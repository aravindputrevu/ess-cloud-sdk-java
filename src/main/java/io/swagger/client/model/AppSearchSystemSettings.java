/*
 * Elastic Cloud API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * This structure defines a curated subset of the AppSearch settings. (This field together with &#x27;user_settings_override*&#x27; and  &#x27;user_settings*&#x27; defines the total set of AppSearch settings)
 */
@Schema(description = "This structure defines a curated subset of the AppSearch settings. (This field together with 'user_settings_override*' and  'user_settings*' defines the total set of AppSearch settings)")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-03-10T16:33:30.970+05:30[Asia/Kolkata]")
public class AppSearchSystemSettings {
  @SerializedName("elasticsearch_url")
  private String elasticsearchUrl = null;

  @SerializedName("elasticsearch_username")
  private String elasticsearchUsername = null;

  @SerializedName("elasticsearch_password")
  private String elasticsearchPassword = null;

  @SerializedName("secret_session_key")
  private String secretSessionKey = null;

  public AppSearchSystemSettings elasticsearchUrl(String elasticsearchUrl) {
    this.elasticsearchUrl = elasticsearchUrl;
    return this;
  }

   /**
   * Optionally override the URL to which to send data (for advanced users only, if unspecified the system selects an internal URL)
   * @return elasticsearchUrl
  **/
  @Schema(description = "Optionally override the URL to which to send data (for advanced users only, if unspecified the system selects an internal URL)")
  public String getElasticsearchUrl() {
    return elasticsearchUrl;
  }

  public void setElasticsearchUrl(String elasticsearchUrl) {
    this.elasticsearchUrl = elasticsearchUrl;
  }

  public AppSearchSystemSettings elasticsearchUsername(String elasticsearchUsername) {
    this.elasticsearchUsername = elasticsearchUsername;
    return this;
  }

   /**
   * Optionally override the account within AppSearch - defaults to a system account that always exists (if specified, the password must also be specified)
   * @return elasticsearchUsername
  **/
  @Schema(description = "Optionally override the account within AppSearch - defaults to a system account that always exists (if specified, the password must also be specified)")
  public String getElasticsearchUsername() {
    return elasticsearchUsername;
  }

  public void setElasticsearchUsername(String elasticsearchUsername) {
    this.elasticsearchUsername = elasticsearchUsername;
  }

  public AppSearchSystemSettings elasticsearchPassword(String elasticsearchPassword) {
    this.elasticsearchPassword = elasticsearchPassword;
    return this;
  }

   /**
   * Optionally override the account within AppSearch - defaults to a system account that always exists (if specified, the username must also be specified)
   * @return elasticsearchPassword
  **/
  @Schema(description = "Optionally override the account within AppSearch - defaults to a system account that always exists (if specified, the username must also be specified)")
  public String getElasticsearchPassword() {
    return elasticsearchPassword;
  }

  public void setElasticsearchPassword(String elasticsearchPassword) {
    this.elasticsearchPassword = elasticsearchPassword;
  }

  public AppSearchSystemSettings secretSessionKey(String secretSessionKey) {
    this.secretSessionKey = secretSessionKey;
    return this;
  }

   /**
   * Optionally override the secret session key within AppSearch - defaults to the previously existing secretSession
   * @return secretSessionKey
  **/
  @Schema(description = "Optionally override the secret session key within AppSearch - defaults to the previously existing secretSession")
  public String getSecretSessionKey() {
    return secretSessionKey;
  }

  public void setSecretSessionKey(String secretSessionKey) {
    this.secretSessionKey = secretSessionKey;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AppSearchSystemSettings appSearchSystemSettings = (AppSearchSystemSettings) o;
    return Objects.equals(this.elasticsearchUrl, appSearchSystemSettings.elasticsearchUrl) &&
        Objects.equals(this.elasticsearchUsername, appSearchSystemSettings.elasticsearchUsername) &&
        Objects.equals(this.elasticsearchPassword, appSearchSystemSettings.elasticsearchPassword) &&
        Objects.equals(this.secretSessionKey, appSearchSystemSettings.secretSessionKey);
  }

  @Override
  public int hashCode() {
    return Objects.hash(elasticsearchUrl, elasticsearchUsername, elasticsearchPassword, secretSessionKey);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AppSearchSystemSettings {\n");
    
    sb.append("    elasticsearchUrl: ").append(toIndentedString(elasticsearchUrl)).append("\n");
    sb.append("    elasticsearchUsername: ").append(toIndentedString(elasticsearchUsername)).append("\n");
    sb.append("    elasticsearchPassword: ").append(toIndentedString(elasticsearchPassword)).append("\n");
    sb.append("    secretSessionKey: ").append(toIndentedString(secretSessionKey)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
