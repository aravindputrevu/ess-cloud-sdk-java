/*
 * Elastic Cloud API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.ElasticsearchMasterElement;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * Information about the master nodes in the Elasticsearch cluster.
 */
@Schema(description = "Information about the master nodes in the Elasticsearch cluster.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-03-10T16:33:30.970+05:30[Asia/Kolkata]")
public class ElasticsearchMasterInfo {
  @SerializedName("healthy")
  private Boolean healthy = null;

  @SerializedName("masters")
  private List<ElasticsearchMasterElement> masters = new ArrayList<ElasticsearchMasterElement>();

  @SerializedName("instances_with_no_master")
  private List<String> instancesWithNoMaster = new ArrayList<String>();

  public ElasticsearchMasterInfo healthy(Boolean healthy) {
    this.healthy = healthy;
    return this;
  }

   /**
   * Whether the master situation in the cluster is healthy (ie is the number of masters !&#x3D; 1), or do any instances have no master
   * @return healthy
  **/
  @Schema(required = true, description = "Whether the master situation in the cluster is healthy (ie is the number of masters != 1), or do any instances have no master")
  public Boolean isHealthy() {
    return healthy;
  }

  public void setHealthy(Boolean healthy) {
    this.healthy = healthy;
  }

  public ElasticsearchMasterInfo masters(List<ElasticsearchMasterElement> masters) {
    this.masters = masters;
    return this;
  }

  public ElasticsearchMasterInfo addMastersItem(ElasticsearchMasterElement mastersItem) {
    this.masters.add(mastersItem);
    return this;
  }

   /**
   * Get masters
   * @return masters
  **/
  @Schema(required = true, description = "")
  public List<ElasticsearchMasterElement> getMasters() {
    return masters;
  }

  public void setMasters(List<ElasticsearchMasterElement> masters) {
    this.masters = masters;
  }

  public ElasticsearchMasterInfo instancesWithNoMaster(List<String> instancesWithNoMaster) {
    this.instancesWithNoMaster = instancesWithNoMaster;
    return this;
  }

  public ElasticsearchMasterInfo addInstancesWithNoMasterItem(String instancesWithNoMasterItem) {
    this.instancesWithNoMaster.add(instancesWithNoMasterItem);
    return this;
  }

   /**
   * A list of any instances with no master
   * @return instancesWithNoMaster
  **/
  @Schema(required = true, description = "A list of any instances with no master")
  public List<String> getInstancesWithNoMaster() {
    return instancesWithNoMaster;
  }

  public void setInstancesWithNoMaster(List<String> instancesWithNoMaster) {
    this.instancesWithNoMaster = instancesWithNoMaster;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ElasticsearchMasterInfo elasticsearchMasterInfo = (ElasticsearchMasterInfo) o;
    return Objects.equals(this.healthy, elasticsearchMasterInfo.healthy) &&
        Objects.equals(this.masters, elasticsearchMasterInfo.masters) &&
        Objects.equals(this.instancesWithNoMaster, elasticsearchMasterInfo.instancesWithNoMaster);
  }

  @Override
  public int hashCode() {
    return Objects.hash(healthy, masters, instancesWithNoMaster);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ElasticsearchMasterInfo {\n");
    
    sb.append("    healthy: ").append(toIndentedString(healthy)).append("\n");
    sb.append("    masters: ").append(toIndentedString(masters)).append("\n");
    sb.append("    instancesWithNoMaster: ").append(toIndentedString(instancesWithNoMaster)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
