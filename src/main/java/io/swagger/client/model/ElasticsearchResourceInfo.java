/*
 * Elastic Cloud API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.ElasticsearchClusterInfo;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Describes an Elasticsearch resource belonging to a Deployment
 */
@Schema(description = "Describes an Elasticsearch resource belonging to a Deployment")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-03-10T16:33:30.970+05:30[Asia/Kolkata]")
public class ElasticsearchResourceInfo {
  @SerializedName("ref_id")
  private String refId = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("region")
  private String region = null;

  @SerializedName("info")
  private ElasticsearchClusterInfo info = null;

  public ElasticsearchResourceInfo refId(String refId) {
    this.refId = refId;
    return this;
  }

   /**
   * The locally-unique user-specified id of a Resource
   * @return refId
  **/
  @Schema(required = true, description = "The locally-unique user-specified id of a Resource")
  public String getRefId() {
    return refId;
  }

  public void setRefId(String refId) {
    this.refId = refId;
  }

  public ElasticsearchResourceInfo id(String id) {
    this.id = id;
    return this;
  }

   /**
   * The randomly-generated id of a Resource
   * @return id
  **/
  @Schema(required = true, description = "The randomly-generated id of a Resource")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public ElasticsearchResourceInfo region(String region) {
    this.region = region;
    return this;
  }

   /**
   * The region where this resource exists
   * @return region
  **/
  @Schema(required = true, description = "The region where this resource exists")
  public String getRegion() {
    return region;
  }

  public void setRegion(String region) {
    this.region = region;
  }

  public ElasticsearchResourceInfo info(ElasticsearchClusterInfo info) {
    this.info = info;
    return this;
  }

   /**
   * Get info
   * @return info
  **/
  @Schema(required = true, description = "")
  public ElasticsearchClusterInfo getInfo() {
    return info;
  }

  public void setInfo(ElasticsearchClusterInfo info) {
    this.info = info;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ElasticsearchResourceInfo elasticsearchResourceInfo = (ElasticsearchResourceInfo) o;
    return Objects.equals(this.refId, elasticsearchResourceInfo.refId) &&
        Objects.equals(this.id, elasticsearchResourceInfo.id) &&
        Objects.equals(this.region, elasticsearchResourceInfo.region) &&
        Objects.equals(this.info, elasticsearchResourceInfo.info);
  }

  @Override
  public int hashCode() {
    return Objects.hash(refId, id, region, info);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ElasticsearchResourceInfo {\n");
    
    sb.append("    refId: ").append(toIndentedString(refId)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    region: ").append(toIndentedString(region)).append("\n");
    sb.append("    info: ").append(toIndentedString(info)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
