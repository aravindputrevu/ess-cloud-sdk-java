/*
 * Elastic Cloud API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Information about the use and storage capacity of a Kibana instance or APM Server.
 */
@Schema(description = "Information about the use and storage capacity of a Kibana instance or APM Server.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-03-10T16:33:30.970+05:30[Asia/Kolkata]")
public class ClusterInstanceDiskInfo {
  @SerializedName("disk_space_available")
  private Long diskSpaceAvailable = null;

  @SerializedName("disk_space_used")
  private Long diskSpaceUsed = null;

  @SerializedName("storage_multiplier")
  private Double storageMultiplier = null;

  public ClusterInstanceDiskInfo diskSpaceAvailable(Long diskSpaceAvailable) {
    this.diskSpaceAvailable = diskSpaceAvailable;
    return this;
  }

   /**
   * If known, the amount of total disk space available to the container in MB
   * @return diskSpaceAvailable
  **/
  @Schema(description = "If known, the amount of total disk space available to the container in MB")
  public Long getDiskSpaceAvailable() {
    return diskSpaceAvailable;
  }

  public void setDiskSpaceAvailable(Long diskSpaceAvailable) {
    this.diskSpaceAvailable = diskSpaceAvailable;
  }

  public ClusterInstanceDiskInfo diskSpaceUsed(Long diskSpaceUsed) {
    this.diskSpaceUsed = diskSpaceUsed;
    return this;
  }

   /**
   * The amount of disk space being used by the service in MB
   * @return diskSpaceUsed
  **/
  @Schema(required = true, description = "The amount of disk space being used by the service in MB")
  public Long getDiskSpaceUsed() {
    return diskSpaceUsed;
  }

  public void setDiskSpaceUsed(Long diskSpaceUsed) {
    this.diskSpaceUsed = diskSpaceUsed;
  }

  public ClusterInstanceDiskInfo storageMultiplier(Double storageMultiplier) {
    this.storageMultiplier = storageMultiplier;
    return this;
  }

   /**
   * The storage multiplier originally defined to calculate disk space.
   * @return storageMultiplier
  **/
  @Schema(description = "The storage multiplier originally defined to calculate disk space.")
  public Double getStorageMultiplier() {
    return storageMultiplier;
  }

  public void setStorageMultiplier(Double storageMultiplier) {
    this.storageMultiplier = storageMultiplier;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ClusterInstanceDiskInfo clusterInstanceDiskInfo = (ClusterInstanceDiskInfo) o;
    return Objects.equals(this.diskSpaceAvailable, clusterInstanceDiskInfo.diskSpaceAvailable) &&
        Objects.equals(this.diskSpaceUsed, clusterInstanceDiskInfo.diskSpaceUsed) &&
        Objects.equals(this.storageMultiplier, clusterInstanceDiskInfo.storageMultiplier);
  }

  @Override
  public int hashCode() {
    return Objects.hash(diskSpaceAvailable, diskSpaceUsed, storageMultiplier);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ClusterInstanceDiskInfo {\n");
    
    sb.append("    diskSpaceAvailable: ").append(toIndentedString(diskSpaceAvailable)).append("\n");
    sb.append("    diskSpaceUsed: ").append(toIndentedString(diskSpaceUsed)).append("\n");
    sb.append("    storageMultiplier: ").append(toIndentedString(storageMultiplier)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
