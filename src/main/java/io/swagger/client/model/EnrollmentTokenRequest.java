/*
 * Elastic Cloud API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * An enrollment token request for one or more services.
 */
@Schema(description = "An enrollment token request for one or more services.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-03-10T16:33:30.970+05:30[Asia/Kolkata]")
public class EnrollmentTokenRequest {
  @SerializedName("roles")
  private List<String> roles = null;

  @SerializedName("persistent")
  private Boolean persistent = null;

  @SerializedName("validity_in_seconds")
  private Integer validityInSeconds = null;

  public EnrollmentTokenRequest roles(List<String> roles) {
    this.roles = roles;
    return this;
  }

  public EnrollmentTokenRequest addRolesItem(String rolesItem) {
    if (this.roles == null) {
      this.roles = new ArrayList<String>();
    }
    this.roles.add(rolesItem);
    return this;
  }

   /**
   * The additional services for which this enrollment token applies (empty if not specified, ie system services only)
   * @return roles
  **/
  @Schema(description = "The additional services for which this enrollment token applies (empty if not specified, ie system services only)")
  public List<String> getRoles() {
    return roles;
  }

  public void setRoles(List<String> roles) {
    this.roles = roles;
  }

  public EnrollmentTokenRequest persistent(Boolean persistent) {
    this.persistent = persistent;
    return this;
  }

   /**
   * Whether this token can subsequently to its grant be revoked from the UI
   * @return persistent
  **/
  @Schema(required = true, description = "Whether this token can subsequently to its grant be revoked from the UI")
  public Boolean isPersistent() {
    return persistent;
  }

  public void setPersistent(Boolean persistent) {
    this.persistent = persistent;
  }

  public EnrollmentTokenRequest validityInSeconds(Integer validityInSeconds) {
    this.validityInSeconds = validityInSeconds;
    return this;
  }

   /**
   * The time in seconds for which this token is valid (defaults to 1 hour). Currently this can only be set for ephemeral (persistent: false) tokens.
   * @return validityInSeconds
  **/
  @Schema(description = "The time in seconds for which this token is valid (defaults to 1 hour). Currently this can only be set for ephemeral (persistent: false) tokens.")
  public Integer getValidityInSeconds() {
    return validityInSeconds;
  }

  public void setValidityInSeconds(Integer validityInSeconds) {
    this.validityInSeconds = validityInSeconds;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EnrollmentTokenRequest enrollmentTokenRequest = (EnrollmentTokenRequest) o;
    return Objects.equals(this.roles, enrollmentTokenRequest.roles) &&
        Objects.equals(this.persistent, enrollmentTokenRequest.persistent) &&
        Objects.equals(this.validityInSeconds, enrollmentTokenRequest.validityInSeconds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(roles, persistent, validityInSeconds);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EnrollmentTokenRequest {\n");
    
    sb.append("    roles: ").append(toIndentedString(roles)).append("\n");
    sb.append("    persistent: ").append(toIndentedString(persistent)).append("\n");
    sb.append("    validityInSeconds: ").append(toIndentedString(validityInSeconds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
