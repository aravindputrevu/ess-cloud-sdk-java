/*
 * Elastic Cloud API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.AllocatedInstanceStatus;
import io.swagger.client.model.AllocatorBuildInfo;
import io.swagger.client.model.AllocatorCapacity;
import io.swagger.client.model.AllocatorHealthStatus;
import io.swagger.client.model.AllocatorSettings;
import io.swagger.client.model.MetadataItem;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * The overview information for the allocator.
 */
@Schema(description = "The overview information for the allocator.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-03-10T16:33:30.970+05:30[Asia/Kolkata]")
public class AllocatorInfo {
  @SerializedName("status")
  private AllocatorHealthStatus status = null;

  @SerializedName("allocator_id")
  private String allocatorId = null;

  @SerializedName("zone_id")
  private String zoneId = null;

  @SerializedName("host_ip")
  private String hostIp = null;

  @SerializedName("public_hostname")
  private String publicHostname = null;

  @SerializedName("capacity")
  private AllocatorCapacity capacity = null;

  @SerializedName("settings")
  private AllocatorSettings settings = null;

  @SerializedName("instances")
  private List<AllocatedInstanceStatus> instances = new ArrayList<AllocatedInstanceStatus>();

  @SerializedName("metadata")
  private List<MetadataItem> metadata = new ArrayList<MetadataItem>();

  @SerializedName("build_info")
  private AllocatorBuildInfo buildInfo = null;

  @SerializedName("features")
  private List<String> features = null;

  @SerializedName("region")
  private String region = null;

  public AllocatorInfo status(AllocatorHealthStatus status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public AllocatorHealthStatus getStatus() {
    return status;
  }

  public void setStatus(AllocatorHealthStatus status) {
    this.status = status;
  }

  public AllocatorInfo allocatorId(String allocatorId) {
    this.allocatorId = allocatorId;
    return this;
  }

   /**
   * Identifier for this allocator
   * @return allocatorId
  **/
  @Schema(required = true, description = "Identifier for this allocator")
  public String getAllocatorId() {
    return allocatorId;
  }

  public void setAllocatorId(String allocatorId) {
    this.allocatorId = allocatorId;
  }

  public AllocatorInfo zoneId(String zoneId) {
    this.zoneId = zoneId;
    return this;
  }

   /**
   * Identifier of the zone
   * @return zoneId
  **/
  @Schema(required = true, description = "Identifier of the zone")
  public String getZoneId() {
    return zoneId;
  }

  public void setZoneId(String zoneId) {
    this.zoneId = zoneId;
  }

  public AllocatorInfo hostIp(String hostIp) {
    this.hostIp = hostIp;
    return this;
  }

   /**
   * Host IP of this allocator
   * @return hostIp
  **/
  @Schema(required = true, description = "Host IP of this allocator")
  public String getHostIp() {
    return hostIp;
  }

  public void setHostIp(String hostIp) {
    this.hostIp = hostIp;
  }

  public AllocatorInfo publicHostname(String publicHostname) {
    this.publicHostname = publicHostname;
    return this;
  }

   /**
   * Public hostname of this allocator
   * @return publicHostname
  **/
  @Schema(required = true, description = "Public hostname of this allocator")
  public String getPublicHostname() {
    return publicHostname;
  }

  public void setPublicHostname(String publicHostname) {
    this.publicHostname = publicHostname;
  }

  public AllocatorInfo capacity(AllocatorCapacity capacity) {
    this.capacity = capacity;
    return this;
  }

   /**
   * Get capacity
   * @return capacity
  **/
  @Schema(required = true, description = "")
  public AllocatorCapacity getCapacity() {
    return capacity;
  }

  public void setCapacity(AllocatorCapacity capacity) {
    this.capacity = capacity;
  }

  public AllocatorInfo settings(AllocatorSettings settings) {
    this.settings = settings;
    return this;
  }

   /**
   * Get settings
   * @return settings
  **/
  @Schema(required = true, description = "")
  public AllocatorSettings getSettings() {
    return settings;
  }

  public void setSettings(AllocatorSettings settings) {
    this.settings = settings;
  }

  public AllocatorInfo instances(List<AllocatedInstanceStatus> instances) {
    this.instances = instances;
    return this;
  }

  public AllocatorInfo addInstancesItem(AllocatedInstanceStatus instancesItem) {
    this.instances.add(instancesItem);
    return this;
  }

   /**
   * Get instances
   * @return instances
  **/
  @Schema(required = true, description = "")
  public List<AllocatedInstanceStatus> getInstances() {
    return instances;
  }

  public void setInstances(List<AllocatedInstanceStatus> instances) {
    this.instances = instances;
  }

  public AllocatorInfo metadata(List<MetadataItem> metadata) {
    this.metadata = metadata;
    return this;
  }

  public AllocatorInfo addMetadataItem(MetadataItem metadataItem) {
    this.metadata.add(metadataItem);
    return this;
  }

   /**
   * Arbitrary metadata associated with this allocator
   * @return metadata
  **/
  @Schema(required = true, description = "Arbitrary metadata associated with this allocator")
  public List<MetadataItem> getMetadata() {
    return metadata;
  }

  public void setMetadata(List<MetadataItem> metadata) {
    this.metadata = metadata;
  }

  public AllocatorInfo buildInfo(AllocatorBuildInfo buildInfo) {
    this.buildInfo = buildInfo;
    return this;
  }

   /**
   * Get buildInfo
   * @return buildInfo
  **/
  @Schema(description = "")
  public AllocatorBuildInfo getBuildInfo() {
    return buildInfo;
  }

  public void setBuildInfo(AllocatorBuildInfo buildInfo) {
    this.buildInfo = buildInfo;
  }

  public AllocatorInfo features(List<String> features) {
    this.features = features;
    return this;
  }

  public AllocatorInfo addFeaturesItem(String featuresItem) {
    if (this.features == null) {
      this.features = new ArrayList<String>();
    }
    this.features.add(featuresItem);
    return this;
  }

   /**
   * List of features associated with this allocator. Note this is only present for backwards compatibility purposes and is scheduled for removal in the next major version release.
   * @return features
  **/
  @Schema(description = "List of features associated with this allocator. Note this is only present for backwards compatibility purposes and is scheduled for removal in the next major version release.")
  public List<String> getFeatures() {
    return features;
  }

  public void setFeatures(List<String> features) {
    this.features = features;
  }

  public AllocatorInfo region(String region) {
    this.region = region;
    return this;
  }

   /**
   * The region that this allocator belongs to. Only populated in SaaS or federated ECE.
   * @return region
  **/
  @Schema(description = "The region that this allocator belongs to. Only populated in SaaS or federated ECE.")
  public String getRegion() {
    return region;
  }

  public void setRegion(String region) {
    this.region = region;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AllocatorInfo allocatorInfo = (AllocatorInfo) o;
    return Objects.equals(this.status, allocatorInfo.status) &&
        Objects.equals(this.allocatorId, allocatorInfo.allocatorId) &&
        Objects.equals(this.zoneId, allocatorInfo.zoneId) &&
        Objects.equals(this.hostIp, allocatorInfo.hostIp) &&
        Objects.equals(this.publicHostname, allocatorInfo.publicHostname) &&
        Objects.equals(this.capacity, allocatorInfo.capacity) &&
        Objects.equals(this.settings, allocatorInfo.settings) &&
        Objects.equals(this.instances, allocatorInfo.instances) &&
        Objects.equals(this.metadata, allocatorInfo.metadata) &&
        Objects.equals(this.buildInfo, allocatorInfo.buildInfo) &&
        Objects.equals(this.features, allocatorInfo.features) &&
        Objects.equals(this.region, allocatorInfo.region);
  }

  @Override
  public int hashCode() {
    return Objects.hash(status, allocatorId, zoneId, hostIp, publicHostname, capacity, settings, instances, metadata, buildInfo, features, region);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AllocatorInfo {\n");
    
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    allocatorId: ").append(toIndentedString(allocatorId)).append("\n");
    sb.append("    zoneId: ").append(toIndentedString(zoneId)).append("\n");
    sb.append("    hostIp: ").append(toIndentedString(hostIp)).append("\n");
    sb.append("    publicHostname: ").append(toIndentedString(publicHostname)).append("\n");
    sb.append("    capacity: ").append(toIndentedString(capacity)).append("\n");
    sb.append("    settings: ").append(toIndentedString(settings)).append("\n");
    sb.append("    instances: ").append(toIndentedString(instances)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    buildInfo: ").append(toIndentedString(buildInfo)).append("\n");
    sb.append("    features: ").append(toIndentedString(features)).append("\n");
    sb.append("    region: ").append(toIndentedString(region)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
