/*
 * Elastic Cloud API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.ConstructorInfo;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * The overview information for the installed constructors.
 */
@Schema(description = "The overview information for the installed constructors.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-03-10T16:33:30.970+05:30[Asia/Kolkata]")
public class ConstructorOverview {
  @SerializedName("constructors")
  private List<ConstructorInfo> constructors = null;

  public ConstructorOverview constructors(List<ConstructorInfo> constructors) {
    this.constructors = constructors;
    return this;
  }

  public ConstructorOverview addConstructorsItem(ConstructorInfo constructorsItem) {
    if (this.constructors == null) {
      this.constructors = new ArrayList<ConstructorInfo>();
    }
    this.constructors.add(constructorsItem);
    return this;
  }

   /**
   * Get constructors
   * @return constructors
  **/
  @Schema(description = "")
  public List<ConstructorInfo> getConstructors() {
    return constructors;
  }

  public void setConstructors(List<ConstructorInfo> constructors) {
    this.constructors = constructors;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConstructorOverview constructorOverview = (ConstructorOverview) o;
    return Objects.equals(this.constructors, constructorOverview.constructors);
  }

  @Override
  public int hashCode() {
    return Objects.hash(constructors);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConstructorOverview {\n");
    
    sb.append("    constructors: ").append(toIndentedString(constructors)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
