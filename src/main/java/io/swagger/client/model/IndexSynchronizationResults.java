/*
 * Elastic Cloud API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * Results from synchronizing indices
 */
@Schema(description = "Results from synchronizing indices")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-03-10T16:33:30.970+05:30[Asia/Kolkata]")
public class IndexSynchronizationResults {
  @SerializedName("created")
  private List<String> created = null;

  @SerializedName("updated")
  private List<String> updated = null;

  @SerializedName("deleted")
  private List<String> deleted = null;

  public IndexSynchronizationResults created(List<String> created) {
    this.created = created;
    return this;
  }

  public IndexSynchronizationResults addCreatedItem(String createdItem) {
    if (this.created == null) {
      this.created = new ArrayList<String>();
    }
    this.created.add(createdItem);
    return this;
  }

   /**
   * The ids of documents created in the index by index version
   * @return created
  **/
  @Schema(description = "The ids of documents created in the index by index version")
  public List<String> getCreated() {
    return created;
  }

  public void setCreated(List<String> created) {
    this.created = created;
  }

  public IndexSynchronizationResults updated(List<String> updated) {
    this.updated = updated;
    return this;
  }

  public IndexSynchronizationResults addUpdatedItem(String updatedItem) {
    if (this.updated == null) {
      this.updated = new ArrayList<String>();
    }
    this.updated.add(updatedItem);
    return this;
  }

   /**
   * The ids of documents updated in the index by index version
   * @return updated
  **/
  @Schema(description = "The ids of documents updated in the index by index version")
  public List<String> getUpdated() {
    return updated;
  }

  public void setUpdated(List<String> updated) {
    this.updated = updated;
  }

  public IndexSynchronizationResults deleted(List<String> deleted) {
    this.deleted = deleted;
    return this;
  }

  public IndexSynchronizationResults addDeletedItem(String deletedItem) {
    if (this.deleted == null) {
      this.deleted = new ArrayList<String>();
    }
    this.deleted.add(deletedItem);
    return this;
  }

   /**
   * The ids of documents deleted from the index by index version
   * @return deleted
  **/
  @Schema(description = "The ids of documents deleted from the index by index version")
  public List<String> getDeleted() {
    return deleted;
  }

  public void setDeleted(List<String> deleted) {
    this.deleted = deleted;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IndexSynchronizationResults indexSynchronizationResults = (IndexSynchronizationResults) o;
    return Objects.equals(this.created, indexSynchronizationResults.created) &&
        Objects.equals(this.updated, indexSynchronizationResults.updated) &&
        Objects.equals(this.deleted, indexSynchronizationResults.deleted);
  }

  @Override
  public int hashCode() {
    return Objects.hash(created, updated, deleted);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IndexSynchronizationResults {\n");
    
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    updated: ").append(toIndentedString(updated)).append("\n");
    sb.append("    deleted: ").append(toIndentedString(deleted)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
