/*
 * Elastic Cloud API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.ApmInfo;
import io.swagger.client.model.AppSearchInfo;
import io.swagger.client.model.ElasticsearchClusterInfo;
import io.swagger.client.model.KibanaClusterInfo;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * A container for information about an Elasticsearch cluster, Kibana instance, or APM Server.
 */
@Schema(description = "A container for information about an Elasticsearch cluster, Kibana instance, or APM Server.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-03-10T16:33:30.970+05:30[Asia/Kolkata]")
public class ClusterInfo {
  @SerializedName("elasticsearch")
  private ElasticsearchClusterInfo elasticsearch = null;

  @SerializedName("kibana")
  private KibanaClusterInfo kibana = null;

  @SerializedName("apm")
  private ApmInfo apm = null;

  @SerializedName("app_search")
  private AppSearchInfo appSearch = null;

  public ClusterInfo elasticsearch(ElasticsearchClusterInfo elasticsearch) {
    this.elasticsearch = elasticsearch;
    return this;
  }

   /**
   * Get elasticsearch
   * @return elasticsearch
  **/
  @Schema(description = "")
  public ElasticsearchClusterInfo getElasticsearch() {
    return elasticsearch;
  }

  public void setElasticsearch(ElasticsearchClusterInfo elasticsearch) {
    this.elasticsearch = elasticsearch;
  }

  public ClusterInfo kibana(KibanaClusterInfo kibana) {
    this.kibana = kibana;
    return this;
  }

   /**
   * Get kibana
   * @return kibana
  **/
  @Schema(description = "")
  public KibanaClusterInfo getKibana() {
    return kibana;
  }

  public void setKibana(KibanaClusterInfo kibana) {
    this.kibana = kibana;
  }

  public ClusterInfo apm(ApmInfo apm) {
    this.apm = apm;
    return this;
  }

   /**
   * Get apm
   * @return apm
  **/
  @Schema(description = "")
  public ApmInfo getApm() {
    return apm;
  }

  public void setApm(ApmInfo apm) {
    this.apm = apm;
  }

  public ClusterInfo appSearch(AppSearchInfo appSearch) {
    this.appSearch = appSearch;
    return this;
  }

   /**
   * Get appSearch
   * @return appSearch
  **/
  @Schema(description = "")
  public AppSearchInfo getAppSearch() {
    return appSearch;
  }

  public void setAppSearch(AppSearchInfo appSearch) {
    this.appSearch = appSearch;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ClusterInfo clusterInfo = (ClusterInfo) o;
    return Objects.equals(this.elasticsearch, clusterInfo.elasticsearch) &&
        Objects.equals(this.kibana, clusterInfo.kibana) &&
        Objects.equals(this.apm, clusterInfo.apm) &&
        Objects.equals(this.appSearch, clusterInfo.appSearch);
  }

  @Override
  public int hashCode() {
    return Objects.hash(elasticsearch, kibana, apm, appSearch);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ClusterInfo {\n");
    
    sb.append("    elasticsearch: ").append(toIndentedString(elasticsearch)).append("\n");
    sb.append("    kibana: ").append(toIndentedString(kibana)).append("\n");
    sb.append("    apm: ").append(toIndentedString(apm)).append("\n");
    sb.append("    appSearch: ").append(toIndentedString(appSearch)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
