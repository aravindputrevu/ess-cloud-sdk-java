/*
 * Elastic Cloud API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.RemoteClusterInfo;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * The cross-cluster search settings and status for the Elasticsearch cluster.
 */
@Schema(description = "The cross-cluster search settings and status for the Elasticsearch cluster.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-03-10T16:33:30.970+05:30[Asia/Kolkata]")
public class CrossClusterSearchInfo {
  @SerializedName("remote_clusters")
  private List<RemoteClusterInfo> remoteClusters = null;

  @SerializedName("healthy")
  private Boolean healthy = null;

  public CrossClusterSearchInfo remoteClusters(List<RemoteClusterInfo> remoteClusters) {
    this.remoteClusters = remoteClusters;
    return this;
  }

  public CrossClusterSearchInfo addRemoteClustersItem(RemoteClusterInfo remoteClustersItem) {
    if (this.remoteClusters == null) {
      this.remoteClusters = new ArrayList<RemoteClusterInfo>();
    }
    this.remoteClusters.add(remoteClustersItem);
    return this;
  }

   /**
   * The list of remote clusters this cluster can access using cross-cluster search
   * @return remoteClusters
  **/
  @Schema(description = "The list of remote clusters this cluster can access using cross-cluster search")
  public List<RemoteClusterInfo> getRemoteClusters() {
    return remoteClusters;
  }

  public void setRemoteClusters(List<RemoteClusterInfo> remoteClusters) {
    this.remoteClusters = remoteClusters;
  }

  public CrossClusterSearchInfo healthy(Boolean healthy) {
    this.healthy = healthy;
    return this;
  }

   /**
   * Flag signaling health issues when at least one remote has an incompatible version with this cluster
   * @return healthy
  **/
  @Schema(description = "Flag signaling health issues when at least one remote has an incompatible version with this cluster")
  public Boolean isHealthy() {
    return healthy;
  }

  public void setHealthy(Boolean healthy) {
    this.healthy = healthy;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CrossClusterSearchInfo crossClusterSearchInfo = (CrossClusterSearchInfo) o;
    return Objects.equals(this.remoteClusters, crossClusterSearchInfo.remoteClusters) &&
        Objects.equals(this.healthy, crossClusterSearchInfo.healthy);
  }

  @Override
  public int hashCode() {
    return Objects.hash(remoteClusters, healthy);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CrossClusterSearchInfo {\n");
    
    sb.append("    remoteClusters: ").append(toIndentedString(remoteClusters)).append("\n");
    sb.append("    healthy: ").append(toIndentedString(healthy)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
