/*
 * Elastic Cloud API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.ElasticsearchPlanControlConfiguration;
import io.swagger.client.model.PlanStrategy;
import io.swagger.client.model.RestoreSnapshotConfiguration;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Defines the configuration parameters that control how the plan is applied. For example, the Elasticsearch cluster topology and Elasticsearch settings.
 */
@Schema(description = "Defines the configuration parameters that control how the plan is applied. For example, the Elasticsearch cluster topology and Elasticsearch settings.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-03-10T16:33:30.970+05:30[Asia/Kolkata]")
public class TransientElasticsearchPlanConfiguration {
  @SerializedName("strategy")
  private PlanStrategy strategy = null;

  @SerializedName("plan_configuration")
  private ElasticsearchPlanControlConfiguration planConfiguration = null;

  @SerializedName("restore_snapshot")
  private RestoreSnapshotConfiguration restoreSnapshot = null;

  @SerializedName("cluster_settings_json")
  private Object clusterSettingsJson = null;

  public TransientElasticsearchPlanConfiguration strategy(PlanStrategy strategy) {
    this.strategy = strategy;
    return this;
  }

   /**
   * Get strategy
   * @return strategy
  **/
  @Schema(description = "")
  public PlanStrategy getStrategy() {
    return strategy;
  }

  public void setStrategy(PlanStrategy strategy) {
    this.strategy = strategy;
  }

  public TransientElasticsearchPlanConfiguration planConfiguration(ElasticsearchPlanControlConfiguration planConfiguration) {
    this.planConfiguration = planConfiguration;
    return this;
  }

   /**
   * Get planConfiguration
   * @return planConfiguration
  **/
  @Schema(description = "")
  public ElasticsearchPlanControlConfiguration getPlanConfiguration() {
    return planConfiguration;
  }

  public void setPlanConfiguration(ElasticsearchPlanControlConfiguration planConfiguration) {
    this.planConfiguration = planConfiguration;
  }

  public TransientElasticsearchPlanConfiguration restoreSnapshot(RestoreSnapshotConfiguration restoreSnapshot) {
    this.restoreSnapshot = restoreSnapshot;
    return this;
  }

   /**
   * Get restoreSnapshot
   * @return restoreSnapshot
  **/
  @Schema(description = "")
  public RestoreSnapshotConfiguration getRestoreSnapshot() {
    return restoreSnapshot;
  }

  public void setRestoreSnapshot(RestoreSnapshotConfiguration restoreSnapshot) {
    this.restoreSnapshot = restoreSnapshot;
  }

  public TransientElasticsearchPlanConfiguration clusterSettingsJson(Object clusterSettingsJson) {
    this.clusterSettingsJson = clusterSettingsJson;
    return this;
  }

   /**
   * If specified, contains transient settings to be applied to an Elasticsearch cluster during changes, default values shown below applied. These can be overridden by specifying them in the map (or null to unset). Additional settings can also be set. Settings will be cleared after the plan has finished. If not specified, no settings will be applied. NOTE: These settings are only explicitly cleared for 5.x+ clusters, they must be hand-reset to their defaults in 2.x- (or a cluster reboot will clear them). - indices.store.throttle.max_bytes_per_sec: 150Mb - indices.recovery.max_bytes_per_sec: 150Mb - cluster.routing.allocation.cluster_concurrent_rebalance: 10 - cluster.routing.allocation.node_initial_primaries_recoveries: 8 - cluster.routing.allocation.node_concurrent_incoming_recoveries: 8 
   * @return clusterSettingsJson
  **/
  @Schema(description = "If specified, contains transient settings to be applied to an Elasticsearch cluster during changes, default values shown below applied. These can be overridden by specifying them in the map (or null to unset). Additional settings can also be set. Settings will be cleared after the plan has finished. If not specified, no settings will be applied. NOTE: These settings are only explicitly cleared for 5.x+ clusters, they must be hand-reset to their defaults in 2.x- (or a cluster reboot will clear them). - indices.store.throttle.max_bytes_per_sec: 150Mb - indices.recovery.max_bytes_per_sec: 150Mb - cluster.routing.allocation.cluster_concurrent_rebalance: 10 - cluster.routing.allocation.node_initial_primaries_recoveries: 8 - cluster.routing.allocation.node_concurrent_incoming_recoveries: 8 ")
  public Object getClusterSettingsJson() {
    return clusterSettingsJson;
  }

  public void setClusterSettingsJson(Object clusterSettingsJson) {
    this.clusterSettingsJson = clusterSettingsJson;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TransientElasticsearchPlanConfiguration transientElasticsearchPlanConfiguration = (TransientElasticsearchPlanConfiguration) o;
    return Objects.equals(this.strategy, transientElasticsearchPlanConfiguration.strategy) &&
        Objects.equals(this.planConfiguration, transientElasticsearchPlanConfiguration.planConfiguration) &&
        Objects.equals(this.restoreSnapshot, transientElasticsearchPlanConfiguration.restoreSnapshot) &&
        Objects.equals(this.clusterSettingsJson, transientElasticsearchPlanConfiguration.clusterSettingsJson);
  }

  @Override
  public int hashCode() {
    return Objects.hash(strategy, planConfiguration, restoreSnapshot, clusterSettingsJson);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TransientElasticsearchPlanConfiguration {\n");
    
    sb.append("    strategy: ").append(toIndentedString(strategy)).append("\n");
    sb.append("    planConfiguration: ").append(toIndentedString(planConfiguration)).append("\n");
    sb.append("    restoreSnapshot: ").append(toIndentedString(restoreSnapshot)).append("\n");
    sb.append("    clusterSettingsJson: ").append(toIndentedString(clusterSettingsJson)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
